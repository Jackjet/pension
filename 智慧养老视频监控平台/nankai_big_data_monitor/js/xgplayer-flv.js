!function (e, t) { "object" == typeof exports && "undefined" != typeof module ? module.exports = t(require("xgplayer")) : "function" == typeof define && define.amd ? define(["xgplayer"], t) : (e = e || self, e.FlvPlayer = t(e.Player)) }(this, function (e) { "use strict"; function t() { var e = !1, t = !1; try { var i = new (window.AudioContext || window.webkitAudioContext); i.close(), i = null, e = !0 } catch (e) { } try { for (var n = document.createElement("canvas"), r = ["webgl", "experimental-webgl", "moz-webgl", "webkit-3d"], a = 0; a < r.length; a++) { var s = n.getContext(r[a]); if (s) { s = null, n = null, t = !0; break } } } catch (e) { } var o = void 0; if ("customElements" in window && window.customElements.define) { var u = window.customElements.get("mobile-video"); o = u && u.isSupported() } return e && t && o } function i(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function n(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function r(e, t) { if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return !t || "object" !== (void 0 === t ? "undefined" : Ne(t)) && "function" != typeof t ? e : t } function a(e, t) { if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + (void 0 === t ? "undefined" : Ne(t))); e.prototype = Object.create(t && t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 } }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t) } function s(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function o(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function u(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function l(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function h() { } function c() { c.init.call(this) } function f(e) { return void 0 === e._maxListeners ? c.defaultMaxListeners : e._maxListeners } function d(e, t, i) { if (t) e.call(i); else for (var n = e.length, r = T(e, n), a = 0; a < n; ++a)r[a].call(i) } function p(e, t, i, n) { if (t) e.call(i, n); else for (var r = e.length, a = T(e, r), s = 0; s < r; ++s)a[s].call(i, n) } function v(e, t, i, n, r) { if (t) e.call(i, n, r); else for (var a = e.length, s = T(e, a), o = 0; o < a; ++o)s[o].call(i, n, r) } function y(e, t, i, n, r, a) { if (t) e.call(i, n, r, a); else for (var s = e.length, o = T(e, s), u = 0; u < s; ++u)o[u].call(i, n, r, a) } function _(e, t, i, n) { if (t) e.apply(i, n); else for (var r = e.length, a = T(e, r), s = 0; s < r; ++s)a[s].apply(i, n) } function m(e, t, i, n) { var r, a, s; if ("function" != typeof i) throw new TypeError('"listener" argument must be a function'); if (a = e._events, a ? (a.newListener && (e.emit("newListener", t, i.listener ? i.listener : i), a = e._events), s = a[t]) : (a = e._events = new h, e._eventsCount = 0), s) { if ("function" == typeof s ? s = a[t] = n ? [i, s] : [s, i] : n ? s.unshift(i) : s.push(i), !s.warned && (r = f(e)) && r > 0 && s.length > r) { s.warned = !0; var o = new Error("Possible EventEmitter memory leak detected. " + s.length + " " + t + " listeners added. Use emitter.setMaxListeners() to increase limit"); o.name = "MaxListenersExceededWarning", o.emitter = e, o.type = t, o.count = s.length, g(o) } } else s = a[t] = i, ++e._eventsCount; return e } function g(e) { "function" == typeof console.warn ? console.warn(e) : console.log(e) } function E(e, t, i) { function n() { e.removeListener(t, n), r || (r = !0, i.apply(e, arguments)) } var r = !1; return n.listener = i, n } function b(e) { var t = this._events; if (t) { var i = t[e]; if ("function" == typeof i) return 1; if (i) return i.length } return 0 } function k(e, t) { for (var i = t, n = i + 1, r = e.length; n < r; i += 1, n += 1)e[i] = e[n]; e.pop() } function T(e, t) { for (var i = new Array(t); t--;)i[t] = e[t]; return i } function A(e) { for (var t = new Array(e.length), i = 0; i < t.length; ++i)t[i] = e[i].listener || e[i]; return t } function S(e, t) { if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return !t || "object" !== (void 0 === t ? "undefined" : at(t)) && "function" != typeof t ? e : t } function w(e, t) { if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + (void 0 === t ? "undefined" : at(t))); e.prototype = Object.create(t && t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 } }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t) } function R(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function D(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function O(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function L(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function B(e) { if (Array.isArray(e)) { for (var t = 0, i = Array(e.length); t < e.length; t++)i[t] = e[t]; return i } return Array.from(e) } function x(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function C(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function M(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function U(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function I(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function P(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function N(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function F(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function G(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function V(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function j(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function z(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function H(e) { if (Array.isArray(e)) { for (var t = 0, i = Array(e.length); t < e.length; t++)i[t] = e[t]; return i } return Array.from(e) } function X(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function W(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function K(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function Y(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function q(e) { return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e } function Z(e, t) { return t = { exports: {} }, e(t, t.exports), t.exports } function J(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function Q(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function $(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function ee(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function te(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function ie(e, t) { if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return !t || "object" !== (void 0 === t ? "undefined" : Yi(t)) && "function" != typeof t ? e : t } function ne(e, t) { if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + (void 0 === t ? "undefined" : Yi(t))); e.prototype = Object.create(t && t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 } }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t) } function re(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function ae(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function se(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function oe(e, t) { if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return !t || "object" !== (void 0 === t ? "undefined" : hn(t)) && "function" != typeof t ? e : t } function ue(e, t) { if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + (void 0 === t ? "undefined" : hn(t))); e.prototype = Object.create(t && t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 } }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t) } function le(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function he(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function ce(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } function fe(e, t) { if (!e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); return !t || "object" !== (void 0 === t ? "undefined" : Sn(t)) && "function" != typeof t ? e : t } function de(e, t) { if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function, not " + (void 0 === t ? "undefined" : Sn(t))); e.prototype = Object.create(t && t.prototype, { constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 } }), t && (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : e.__proto__ = t) } function pe(e, t) { if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function") } e = e && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e; var ve = function (e, t) { var i = Date.now(), n = null, r = !0; return function () { for (var a = arguments.length, s = Array(a), o = 0; o < a; o++)s[o] = arguments[o]; var u = Date.now(); r && (i = Date.now(), r = !1, e.apply(void 0, s)), u - i > t ? (i = u, e.apply(void 0, s)) : (n && window.clearTimeout(n), n = setTimeout(function () { e.apply(void 0, s) }, t)) } }, ye = { fixedFloat: function (e, t) { return Number.parseFloat(Number(e).toFixed(t)) } }, _e = t, me = Object.freeze({ __proto__: null, debounce: ve, caculate: ye, softSolutionProbe: _e }), ge = { VISIBILITY_CHANGE: "VISIBILITY_CHANGE" }, Ee = { SEEK: "SEEK" }, be = { LADER_START: "LOADER_START", LOADER_DATALOADED: "LOADER_DATALOADED", LOADER_COMPLETE: "LOADER_COMPLETE", LOADER_RESPONSE_HEADERS: "LOADER_RESPONSE_HEADERS", LOADER_ERROR: "LOADER_ERROR", LOADER_RETRY: "LOADER_RETRY" }, ke = { DEMUX_START: "DEMUX_START", DEMUX_COMPLETE: "DEMUX_COMPLETE", DEMUX_ERROR: "DEMUX_ERROR", METADATA_PARSED: "METADATA_PARSED", SEI_PARSED: "SEI_PARSED", VIDEO_METADATA_CHANGE: "VIDEO_METADATA_CHANGE", AUDIO_METADATA_CHANGE: "AUDIO_METADATA_CHANGE", MEDIA_INFO: "MEDIA_INFO", ISKEYFRAME: "ISKEYFRAME" }, Te = { REMUX_METADATA: "REMUX_METADATA", REMUX_MEDIA: "REMUX_MEDIA", MEDIA_SEGMENT: "MEDIA_SEGMENT", REMUX_ERROR: "REMUX_ERROR", INIT_SEGMENT: "INIT_SEGMENT", DETECT_CHANGE_STREAM: "DETECT_CHANGE_STREAM", DETECT_CHANGE_STREAM_DISCONTINUE: "DETECT_CHANGE_STREAM_DISCONTINUE", DETECT_AUDIO_GAP: "DETECT_AUDIO_GAP", DETECT_LARGE_GAP: "DETECT_LARGE_GAP", DETECT_AUDIO_OVERLAP: "DETECT_AUDIO_OVERLAP", RANDOM_ACCESS_POINT: "RANDOM_ACCESS_POINT", DETECT_FRAG_ID_DISCONTINUE: "DETECT_FRAG_ID_DISCONTINUE" }, Ae = { SOURCE_UPDATE_END: "SOURCE_UPDATE_END", MSE_ERROR: "MSE_ERROR", MSE_WRONG_TRACK_ADD: "MSE_WRONG_TRACK_ADD" }, Se = { RETRY_TIME_EXCEEDED: "RETRY_TIME_EXCEEDED" }, we = { START_DECRYPT: "START_DECRYPT", DECRYPTED: "DECRYPTED" }, Re = Object.assign({}, be, ke, Te, Ae, Se, Ee, ge), De = [], Oe = []; for (var Le in Re) Re.hasOwnProperty(Le) && De.push(Re[Le]); for (var Be in Re) Re.hasOwnProperty(Be) && Oe.push(Re[Be]); var xe = { ALLEVENTS: Re, HLS_EVENTS: Se, REMUX_EVENTS: Te, DEMUX_EVENTS: ke, MSE_EVENTS: Ae, LOADER_EVENTS: be, FlvAllowedEvents: De, HlsAllowedEvents: Oe, CRYTO_EVENTS: we, PLAYER_EVENTS: Ee, BROWSER_EVENTS: ge }, Ce = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), Me = function e() { i(this, e), this.mimetype = "", this.init = null, this.data = [], this.bufferDuration = 0 }, Ue = function () { function e() { i(this, e), this.sources = {} } return Ce(e, [{ key: "getSource", value: function (e) { return this.sources[e] } }, { key: "createSource", value: function (e) { return this.sources[e] = new Me, this.sources[e] } }, { key: "clear", value: function () { this.sources = {} } }, { key: "destroy", value: function () { this.sources = {} } }]), e }(), Ie = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), Pe = function () { function e(t) { if (n(this, e), !(t instanceof ArrayBuffer)) throw new Error("data is invalid"); this.buffer = t, this.dataview = new DataView(t), this.dataview.position = 0 } return Ie(e, [{ key: "back", value: function (e) { this.position -= e } }, { key: "skip", value: function (t) { for (var i = Math.floor(t / 4), n = t % 4, r = 0; r < i; r++)e.readByte(this.dataview, 4); n > 0 && e.readByte(this.dataview, n) } }, { key: "readUint8", value: function () { return e.readByte(this.dataview, 1) } }, { key: "readUint16", value: function () { return e.readByte(this.dataview, 2) } }, { key: "readUint24", value: function () { return e.readByte(this.dataview, 3) } }, { key: "readUint32", value: function () { return e.readByte(this.dataview, 4) } }, { key: "readUint64", value: function () { return e.readByte(this.dataview, 8) } }, { key: "readInt8", value: function () { return e.readByte(this.dataview, 1, !0) } }, { key: "readInt16", value: function () { return e.readByte(this.dataview, 2, !0) } }, { key: "readInt32", value: function () { return e.readByte(this.dataview, 4, !0) } }, { key: "writeUint32", value: function (e) { return new Uint8Array([e >>> 24 & 255, e >>> 16 & 255, e >>> 8 & 255, 255 & e]) } }, { key: "length", get: function () { return this.buffer.byteLength } }, { key: "position", set: function (e) { this.dataview.position = e }, get: function () { return this.dataview.position } }], [{ key: "readByte", value: function (e, t, i) { var n = void 0; switch (t) { case 1: n = i ? e.getInt8(e.position) : e.getUint8(e.position); break; case 2: n = i ? e.getInt16(e.position) : e.getUint16(e.position); break; case 3: if (i) throw new Error("not supported for readByte 3"); n = e.getUint8(e.position) << 16, n |= e.getUint8(e.position + 1) << 8, n |= e.getUint8(e.position + 2); break; case 4: n = i ? e.getInt32(e.position) : e.getUint32(e.position); break; case 8: if (i) throw new Error("not supported for readBody 8"); n = e.getUint32(e.position) << 32, n |= e.getUint32(e.position + 4); break; default: n = "" }return e.position += t, n } }]), e }(), Ne = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) { return typeof e } : function (e) { return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e }, Fe = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), Ge = function () { function e() { s(this, e), this.id = -1, this.sequenceNumber = 0, this.samples = [], this.droppedSamples = [], this.length = 0 } return Fe(e, [{ key: "reset", value: function () { this.sequenceNumber = 0, this.samples = [], this.length = 0 } }, { key: "distroy", value: function () { this.reset(), this.id = -1 } }]), e }(), Ve = function (e) { function t() { s(this, t); var e = r(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this)); return e.TAG = "AudioTrack", e.type = "audio", e } return a(t, e), t }(Ge), je = function (e) { function t() { s(this, t); var e = r(this, (t.__proto__ || Object.getPrototypeOf(t)).call(this)); return e.TAG = "VideoTrack", e.type = "video", e.dropped = 0, e } return a(t, e), Fe(t, [{ key: "reset", value: function () { this.sequenceNumber = 0, this.samples = [], this.length = 0, this.dropped = 0 } }]), t }(Ge), ze = (function () { function e() { s(this, e), this.audioTrack = null, this.videoTrack = null } Fe(e, [{ key: "destroy", value: function () { this.audioTrack = null, this.videoTrack = null } }]) }(), function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }()), He = function () { function e(t) { o(this, e), this.length = t || 0, this.historyLen = t || 0, this.array = [], this.offset = 0 } return ze(e, [{ key: "push", value: function (e) { this.array.push(e), this.length += e.byteLength, this.historyLen += e.byteLength } }, { key: "shift", value: function (e) { if (this.array.length < 1) return new Uint8Array(0); if (void 0 === e) return this._shiftBuffer(); if (this.offset + e === this.array[0].length) { var t = this.array[0].slice(this.offset, this.offset + e); return this.offset = 0, this.array.shift(), this.length -= e, t } if (this.offset + e < this.array[0].length) { var i = this.array[0].slice(this.offset, this.offset + e); return this.offset += e, this.length -= e, i } for (var n = new Uint8Array(e), r = 0; this.array.length > 0 && e > 0;) { if (this.offset + e < this.array[0].length) { var a = this.array[0].slice(this.offset, this.offset + e); n.set(a, r), this.offset += e, this.length -= e, e = 0; break } var s = this.array[0].length - this.offset; n.set(this.array[0].slice(this.offset, this.array[0].length), r), this.array.shift(), this.offset = 0, r += s, this.length -= s, e -= s } return n } }, { key: "clear", value: function () { this.array = [], this.length = 0, this.offset = 0 } }, { key: "destroy", value: function () { this.clear(), this.historyLen = 0 } }, { key: "_shiftBuffer", value: function () { return this.length -= this.array[0].length, this.offset = 0, this.array.shift() } }, { key: "toInt", value: function (e, t) { for (var i = 0, n = this.offset + e; n < this.offset + t + e;)n < this.array[0].length ? i = 256 * i + this.array[0][n] : this.array[1] && (i = 256 * i + this.array[1][n - this.array[0].length]), n++; return i } }]), e }(), Xe = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), We = function () { function e(t) { u(this, e); var i = { sampleRate: 48e3, channelCount: 2, codec: "mp4a.40.2", config: [41, 401, 136, 0], duration: 0, id: 2, refSampleDuration: 21, sampleRateIndex: 3, timescale: 1e3, type: "audio" }; return t ? Object.assign({}, i, t) : i } return Xe(e, [{ key: "destroy", value: function () { this.init = null } }]), e }(), Ke = function () { function e(t) { u(this, e); var i = { avcc: null, sps: new Uint8Array(0), pps: new Uint8Array(0), chromaFormat: 420, codec: "avc1.640020", codecHeight: 720, codecWidth: 1280, duration: 0, frameRate: { fixed: !0, fps: 25, fps_num: 25e3, fps_den: 1e3 }, id: 1, level: "3.2", presentHeight: 720, presentWidth: 1280, profile: "High", refSampleDuration: 40, parRatio: { height: 1, width: 1 }, timescale: 1e3, type: "video" }; return t ? Object.assign({}, i, t) : i } return Xe(e, [{ key: "destroy", value: function () { this.init = null, this.sps = null, this.pps = null } }]), e }(), Ye = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), qe = function (e) { for (var t in e) if (e.hasOwnProperty(t) && null === e[t]) return !1; return !0 }, Ze = Ue, Je = Pe, Qe = Ge, $e = He, et = Ve, tt = function () { function e() { l(this, e), this.mimeType = null, this.duration = null, this.hasVideo = null, this.video = { codec: null, width: null, height: null, profile: null, level: null, frameRate: { fixed: !0, fps: 25, fps_num: 25e3, fps_den: 1e3 }, chromaFormat: null, parRatio: { width: 1, height: 1 } }, this.hasAudio = null, this.audio = { codec: null, sampleRate: null, sampleRateIndex: null, channelCount: null } } return Ye(e, [{ key: "isComplete", value: function () { return e.isBaseInfoReady(this) && e.isVideoReady(this) && e.isAudioReady(this) } }], [{ key: "isBaseInfoReady", value: function (e) { return qe(e) } }, { key: "isVideoReady", value: function (e) { return !e.hasVideo || qe(e.video) } }, { key: "isAudioReady", value: function (e) { return !e.hasAudio || qe(e.video) } }]), e }(), it = je, nt = We, rt = Ke; h.prototype = Object.create(null), c.EventEmitter = c, c.usingDomains = !1, c.prototype.domain = void 0, c.prototype._events = void 0, c.prototype._maxListeners = void 0, c.defaultMaxListeners = 10, c.init = function () { this.domain = null, c.usingDomains && (void 0).active, this._events && this._events !== Object.getPrototypeOf(this)._events || (this._events = new h, this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0 }, c.prototype.setMaxListeners = function (e) { if ("number" != typeof e || e < 0 || isNaN(e)) throw new TypeError('"n" argument must be a positive number'); return this._maxListeners = e, this }, c.prototype.getMaxListeners = function () { return f(this) }, c.prototype.emit = function (e) { var t, i, n, r, a, s, o, u = "error" === e; if (s = this._events) u = u && null == s.error; else if (!u) return !1; if (o = this.domain, u) { if (t = arguments[1], !o) { if (t instanceof Error) throw t; var l = new Error('Uncaught, unspecified "error" event. (' + t + ")"); throw l.context = t, l } return t || (t = new Error('Uncaught, unspecified "error" event')), t.domainEmitter = this, t.domain = o, t.domainThrown = !1, o.emit("error", t), !1 } if (!(i = s[e])) return !1; var h = "function" == typeof i; switch (n = arguments.length) { case 1: d(i, h, this); break; case 2: p(i, h, this, arguments[1]); break; case 3: v(i, h, this, arguments[1], arguments[2]); break; case 4: y(i, h, this, arguments[1], arguments[2], arguments[3]); break; default: for (r = new Array(n - 1), a = 1; a < n; a++)r[a - 1] = arguments[a]; _(i, h, this, r) }return !0 }, c.prototype.addListener = function (e, t) { return m(this, e, t, !1) }, c.prototype.on = c.prototype.addListener, c.prototype.prependListener = function (e, t) { return m(this, e, t, !0) }, c.prototype.once = function (e, t) { if ("function" != typeof t) throw new TypeError('"listener" argument must be a function'); return this.on(e, E(this, e, t)), this }, c.prototype.prependOnceListener = function (e, t) { if ("function" != typeof t) throw new TypeError('"listener" argument must be a function'); return this.prependListener(e, E(this, e, t)), this }, c.prototype.removeListener = function (e, t) { var i, n, r, a, s; if ("function" != typeof t) throw new TypeError('"listener" argument must be a function'); if (!(n = this._events)) return this; if (!(i = n[e])) return this; if (i === t || i.listener && i.listener === t) 0 == --this._eventsCount ? this._events = new h : (delete n[e], n.removeListener && this.emit("removeListener", e, i.listener || t)); else if ("function" != typeof i) { for (r = -1, a = i.length; a-- > 0;)if (i[a] === t || i[a].listener && i[a].listener === t) { s = i[a].listener, r = a; break } if (r < 0) return this; if (1 === i.length) { if (i[0] = void 0, 0 == --this._eventsCount) return this._events = new h, this; delete n[e] } else k(i, r); n.removeListener && this.emit("removeListener", e, s || t) } return this }, c.prototype.removeAllListeners = function (e) { var t, i; if (!(i = this._events)) return this; if (!i.removeListener) return 0 === arguments.length ? (this._events = new h, this._eventsCount = 0) : i[e] && (0 == --this._eventsCount ? this._events = new h : delete i[e]), this; if (0 === arguments.length) { for (var n, r = Object.keys(i), a = 0; a < r.length; ++a)"removeListener" !== (n = r[a]) && this.removeAllListeners(n); return this.removeAllListeners("removeListener"), this._events = new h, this._eventsCount = 0, this } if ("function" == typeof (t = i[e])) this.removeListener(e, t); else if (t) do { this.removeListener(e, t[t.length - 1]) } while (t[0]); return this }, c.prototype.listeners = function (e) { var t, i = this._events; return i && (t = i[e]) ? "function" == typeof t ? [t.listener || t] : A(t) : [] }, c.listenerCount = function (e, t) { return "function" == typeof e.listenerCount ? e.listenerCount(t) : b.call(e, t) }, c.prototype.listenerCount = b, c.prototype.eventNames = function () { return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [] }; var at = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) { return typeof e } : function (e) { return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e }, st = function e(t, i, n) { null === t && (t = Function.prototype); var r = Object.getOwnPropertyDescriptor(t, i); if (void 0 === r) { var a = Object.getPrototypeOf(t); return null === a ? void 0 : e(a, i, n) } if ("value" in r) return r.value; var s = r.get; if (void 0 !== s) return s.call(n) }, ot = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), ut = function () { function e() { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : []; R(this, e), this._emitter = new c, this._emitter.off || (this._emitter.off = this._emitter.removeListener), this.mediaInfo = new tt, this._instanceMap = {}, this._clsMap = {}, this._inited = !1, this.allowedEvents = t, this._hooks = {} } return ot(e, [{ key: "getInstance", value: function (e) { var t = this._instanceMap[e]; return t || null } }, { key: "initInstance", value: function (e) { for (var t = arguments.length, i = Array(t > 1 ? t - 1 : 0), n = 1; n < t; n++)i[n - 1] = arguments[n]; var r = i[0], a = i[1], s = i[2], o = i[3]; if (this._clsMap[e]) { var u = new this._clsMap[e](r, a, s, o); return this._instanceMap[e] = u, u.init && u.init(), u } throw new Error(e + "未在context中注册") } }, { key: "init", value: function (e) { if (!this._inited) { for (var t in this._clsMap) this._clsMap.hasOwnProperty(t) && !this._instanceMap[t] && this.initInstance(t, e); this._inited = !0 } } }, { key: "registry", value: function (e, t) { var i = this, n = this._emitter, r = this._isMessageNameValid.bind(this), a = this, s = function (t) { function i(t, n, r) { R(this, i); var s = S(this, (i.__proto__ || Object.getPrototypeOf(i)).call(this, t, n, r)); return s.listeners = {}, s.onceListeners = {}, s.TAG = e, s._context = a, s } return w(i, t), ot(i, [{ key: "on", value: function (t, i) { return r(t), this.listeners[t] ? this.listeners[t].push(i) : this.listeners[t] = [i], n.on(t + "__TO__" + e, i), n.on(t, i) } }, { key: "before", value: function (e, t) { r(e), a._hooks[e] ? a._hooks[e].push(t) : a._hooks[e] = [t] } }, { key: "once", value: function (t, i) { return r(t), this.onceListeners[t] ? this.onceListeners[t].push(i) : this.onceListeners[t] = [i], n.once(t + "__TO__" + e, i), n.once(t, i) } }, { key: "emit", value: function (e) { r(e); for (var t = a._hooks ? a._hooks[e] : null, i = arguments.length, s = Array(i > 1 ? i - 1 : 0), o = 1; o < i; o++)s[o - 1] = arguments[o]; if (t) for (var u = 0, l = t.length; u < l; u++)t[u].apply(void 0, s); return n.emit.apply(n, [e].concat(s)) } }, { key: "emitTo", value: function (e, t) { r(t); for (var i = arguments.length, a = Array(i > 2 ? i - 2 : 0), s = 2; s < i; s++)a[s - 2] = arguments[s]; return n.emit.apply(n, [t + "__TO__" + e].concat(a)) } }, { key: "off", value: function (e, t) { return r(e), n.off(e, t) } }, { key: "removeListeners", value: function () { var t = Object.prototype.hasOwnProperty.bind(this.listeners); for (var i in this.listeners) if (t(i)) for (var r = this.listeners[i] || [], a = 0; a < r.length; a++) { var s = r[a]; n.off(i, s), n.off(i + "__TO__" + e, s) } for (var o in this.onceListeners) if (t(o)) for (var u = this.onceListeners[o] || [], l = 0; l < u.length; l++) { var h = u[l]; n.off(o, h), n.off(o + "__TO__" + e, h) } } }, { key: "destroy", value: function () { if (this.removeListeners(), this.listeners = {}, delete a._instanceMap[e], st(i.prototype.__proto__ || Object.getPrototypeOf(i.prototype), "destroy", this)) return st(i.prototype.__proto__ || Object.getPrototypeOf(i.prototype), "destroy", this).call(this) } }]), i }(t); return this._clsMap[e] = s, function () { for (var t = arguments.length, n = Array(t), r = 0; r < t; r++)n[r] = arguments[r]; return i.initInstance.apply(i, [e].concat(n)) } } }, { key: "seek", value: function (e) { this._emitter.emit(xe.PLAYER_EVENTS.SEEK, e) } }, { key: "destroyInstances", value: function () { var e = this; Object.keys(this._instanceMap).forEach(function (t) { e._instanceMap[t].destroy && e._instanceMap[t].destroy() }) } }, { key: "destroy", value: function () { this._emitter.removeAllListeners(), this._emitter = null, this.allowedEvents = [], this._clsMap = null, this._context = null, this._hooks = null, this.destroyInstances() } }, { key: "_isMessageNameValid", value: function (e) { if (!this.allowedEvents.indexOf(e) < 0) throw new Error("unregistered message name: " + e) } }]), e }(), lt = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), ht = xe.MSE_EVENTS, ct = function () { function e(t, i) { D(this, e), i && (this._context = i, this.emit = i._emitter.emit.bind(i._emitter)), this.TAG = "MSE", this.configs = Object.assign({}, t), this.container = this.configs.container, this.format = this.configs.format, this.mediaSource = null, this.sourceBuffers = {}, this.preloadTime = this.configs.preloadTime || 1, this.onSourceOpen = this.onSourceOpen.bind(this), this.onTimeUpdate = this.onTimeUpdate.bind(this), this.onUpdateEnd = this.onUpdateEnd.bind(this), this.onWaiting = this.onWaiting.bind(this), this.opened = !1 } return lt(e, [{ key: "init", value: function () { this.mediaSource = new self.MediaSource, this.mediaSource.addEventListener("sourceopen", this.onSourceOpen), this._url = null, this.container.addEventListener("timeupdate", this.onTimeUpdate), this.container.addEventListener("waiting", this.onWaiting) } }, { key: "resetContext", value: function (t, i) { if (this._context = t, this.emit = t._emitter.emit.bind(t._emitter), !i) for (var n = 0; n < Object.keys(this.sourceBuffers).length; n++) { var r = this.sourceBuffers[Object.keys(this.sourceBuffers)[n]]; r.updating || e.clearBuffer(r) } } }, { key: "onTimeUpdate", value: function () { this.emit("TIME_UPDATE", this.container) } }, { key: "onWaiting", value: function () { this.emit("WAITING", this.container) } }, { key: "onSourceOpen", value: function () { this.opened = !0, this.addSourceBuffers() } }, { key: "onUpdateEnd", value: function () { this.emit(ht.SOURCE_UPDATE_END), this.doAppend() } }, { key: "addSourceBuffers", value: function () { if (this.mediaSource && "open" === this.mediaSource.readyState && this.opened) { var e = this._context.getInstance("PRE_SOURCE_BUFFER"), t = this._context.getInstance("TRACKS"), i = void 0; if (e && t) { e = e.sources; for (var n = !1, r = 0, a = Object.keys(e).length; r < a; r++) { var s = Object.keys(e)[r]; n = !1, "audio" === s ? i = t.audioTrack : "video" === s && (i = t.videoTrack), i && null !== e[s].init && e[s].data.length && (n = !0) } if (n) { if (Object.keys(this.sourceBuffers).length > 1) return; for (var o = 0, u = Object.keys(e).length; o < u; o++) { var l = Object.keys(e)[o]; if (!this.sourceBuffers[l]) { var h = e[l], c = "video" === l ? "video/mp4;codecs=" + h.mimetype : "audio/mp4;codecs=" + h.mimetype; try { var f = this.mediaSource.addSourceBuffer(c); this.sourceBuffers[l] = f, f.addEventListener("updateend", this.onUpdateEnd) } catch (e) { if (22 === e.code && Object.keys(this.sourceBuffers).length > 0) return this.emit(ht.MSE_WRONG_TRACK_ADD, l); this.emit(ht.MSE_ERROR, this.TAG, new Error(e.message)) } } } Object.keys(this.sourceBuffers).length === this.sourceBufferLen && this.doAppend() } } } } }, { key: "doAppend", value: function () { if (this.mediaSource && "closed" !== this.mediaSource.readyState) { this._doCleanupSourceBuffer(); var e = this._context.getInstance("PRE_SOURCE_BUFFER"); if (e && !(Object.keys(this.sourceBuffers).length < this.sourceBufferLen)) for (var t = 0; t < Object.keys(this.sourceBuffers).length; t++) { var i = Object.keys(this.sourceBuffers)[t], n = this.sourceBuffers[i]; if (!n.updating) { var r = e.sources[i]; if (this["no" + i]) r.data = [], r.init.buffer = null; else if (r && !r.inited) try { n.appendBuffer(r.init.buffer.buffer), r.inited = !0 } catch (e) { } else if (r) { var a = r.data.shift(); if (a) try { n.appendBuffer(a.buffer.buffer) } catch (e) { r.data.unshift(a) } } } } } } }, { key: "endOfStream", value: function () { if ("open" === this.mediaSource.readyState) try { this.mediaSource.endOfStream() } catch (e) { } } }, { key: "remove", value: function (e) { var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0; try { for (var i = 0; i < Object.keys(this.sourceBuffers).length; i++) { var n = this.sourceBuffers[Object.keys(this.sourceBuffers)[i]]; n.updating || e > t && n.remove(t, e) } } catch (e) { } } }, { key: "_doCleanupSourceBuffer", value: function () { for (var e = this.container.currentTime, t = { video: [], audio: [] }, i = 0; i < Object.keys(this.sourceBuffers).length; i++) { for (var n = Object.keys(this.sourceBuffers)[i], r = this.sourceBuffers[n], a = r.buffered, s = !1, o = 0; o < a.length; o++) { var u = a.start(o), l = a.end(o); if (u <= e && e < l + 3) { if (e - u >= 180) { s = !0; var h = e - 180; t[n].push({ start: u, end: h }) } } else l < e && e - u >= 180 && (s = !0, t[n].push({ start: u, end: l })) } s && !r.updating && this._doRemoveRanges(t) } } }, { key: "_doRemoveRanges", value: function (e) { for (var t in e) if (this.sourceBuffers[t] && !this.sourceBuffers[t].updating) for (var i = this.sourceBuffers[t], n = e[t]; n.length && !i.updating;) { var r = n.shift(); try { r && r.end > r.start && i.remove(r.start, r.end) } catch (e) { } } } }, { key: "cleanBuffers", value: function () { for (var t = this, i = [], n = 0; n < Object.keys(this.sourceBuffers).length; n++)!function (n) { var r = t.sourceBuffers[Object.keys(t.sourceBuffers)[n]], a = void 0; a = r.updating ? new Promise(function (t) { var i = function i() { var n = 3, a = function i() { r.updating ? n > 0 ? (setTimeout(i, 200), n--) : t() : (e.clearBuffer(r), r.addEventListener("updateend", function () { t() })) }; setTimeout(a, 200), r.removeEventListener("updateend", i) }; r.addEventListener("updateend", i) }) : new Promise(function (t) { e.clearBuffer(r), r.addEventListener("updateend", function () { t() }) }), i.push(a) }(n); return Promise.all(i) } }, { key: "removeBuffers", value: function () { for (var t = this, i = [], n = 0; n < Object.keys(this.sourceBuffers).length; n++)!function (n) { var r = t.sourceBuffers[Object.keys(t.sourceBuffers)[n]]; r.removeEventListener("updateend", t.onUpdateEnd); var a = void 0; a = r.updating ? new Promise(function (t) { var i = function i() { var n = 3, a = function i() { r.updating ? n > 0 ? (setTimeout(i, 200), n--) : t() : (e.clearBuffer(r), r.addEventListener("updateend", function () { t() })) }; setTimeout(a, 200), r.removeEventListener("updateend", i) }; r.addEventListener("updateend", i) }) : new Promise(function (t) { e.clearBuffer(r), r.addEventListener("updateend", function () { t() }) }), i.push(a) }(n); return Promise.all(i) } }, { key: "destroy", value: function () { var e = this; return this.container ? (this.container.removeEventListener("timeupdate", this.onTimeUpdate), this.container.removeEventListener("waiting", this.onWaiting), this.mediaSource.removeEventListener("sourceopen", this.onSourceOpen), this.removeBuffers().then(function () { for (var t = Object.keys(e.sourceBuffers), i = 0; i < t.length; i++) { var n = e.sourceBuffers[t[i]]; delete e.sourceBuffers[t[i]], "open" === e.mediaSource.readyState && e.mediaSource.removeSourceBuffer(n) } e.endOfStream(), window.URL.revokeObjectURL(e.url), e.url = null, e.configs = {}, e.container = null, e.mediaSource = null, e.sourceBuffers = {}, e.preloadTime = 1, e.onSourceOpen = null, e.onTimeUpdate = null, e.onUpdateEnd = null, e.onWaiting = null, e.noaudio = void 0, e.novideo = void 0 })) : Promise.resolve() } }, { key: "sourceBufferLen", get: function () { return this._context.mediaInfo ? (!!this._context.mediaInfo.hasVideo && !this.novideo) + (!!this._context.mediaInfo.hasAudio && !this.noaudio) : this.noaudio || this.novideo ? 1 : 2 } }, { key: "url", set: function (e) { this._url = e }, get: function () { return this._url || (this._url = window.URL.createObjectURL(this.mediaSource)), this._url } }], [{ key: "clearBuffer", value: function (e) { try { for (var t = e.buffered, i = .1, n = 0, r = t.length; n < r; n++)i = t.end(n); e.remove(0, i) } catch (e) { } } }]), e }(), ft = function () { var e = new ArrayBuffer(2); return new DataView(e).setInt16(0, 256, !0), 256 === new Int16Array(e)[0] }(), dt = { get device() { var e = dt.os; return e.isPc ? "pc" : e.isTablet ? "tablet" : "mobile" }, get browser() { var e = navigator.userAgent.toLowerCase(), t = { ie: /rv:([\d.]+)\) like gecko/, firfox: /firefox\/([\d.]+)/, chrome: /chrome\/([\d.]+)/, opera: /opera.([\d.]+)/, safari: /version\/([\d.]+).*safari/ }; return [].concat(Object.keys(t).filter(function (i) { return t[i].test(e) }))[0] }, get os() { var e = navigator.userAgent, t = /(?:Windows Phone)/.test(e), i = /(?:SymbianOS)/.test(e) || t, n = /(?:Android)/.test(e), r = /(?:Firefox)/.test(e), a = /(?:iPad|PlayBook)/.test(e) || n && !/(?:Mobile)/.test(e) || r && /(?:Tablet)/.test(e), s = /(?:iPhone)/.test(e) && !a; return { isTablet: a, isPhone: s, isAndroid: n, isPc: !s && !n && !i, isSymbian: i, isWindowsPhone: t, isFireFox: r } }, get isLe() { return ft } }, pt = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), vt = function () { function e() { O(this, e), this._firstCheckpoint = 0, this._lastCheckpoint = 0, this._intervalBytes = 0, this._lastSamplingBytes = 0, this._now = Date.now } return pt(e, [{ key: "reset", value: function () { this._firstCheckpoint = this._lastCheckpoint = 0, this._intervalBytes = 0, this._lastSamplingBytes = 0 } }, { key: "addBytes", value: function (e) { var t = this._now() - this._lastCheckpoint; 0 === this._firstCheckpoint ? (this._firstCheckpoint = this._now(), this._lastCheckpoint = this._firstCheckpoint, this._intervalBytes += e) : t < 5e3 ? this._intervalBytes += e : (this._lastSamplingBytes = this._intervalBytes / (t / 1e3), this._intervalBytes = e, this._lastCheckpoint = this._now()) } }, { key: "currentKBps", get: function () { this.addBytes(0); var e = (this._now() - this._lastCheckpoint) / 1e3; return 0 === e && (e = 1), this._intervalBytes / e / 1024 } }, { key: "lastSamplingKBps", get: function () { return this.addBytes(0), 0 !== this._lastSamplingBytes ? this._lastSamplingBytes / 1024 : this._now() - this._lastCheckpoint >= 500 ? this.currentKBps : 0 } }]), e }(), yt = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) { return typeof e } : function (e) { return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e }, _t = "function" == typeof Symbol && "symbol" === yt(Symbol.iterator) ? function (e) { return void 0 === e ? "undefined" : yt(e) } : function (e) { return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : void 0 === e ? "undefined" : yt(e) }, mt = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), gt = xe.LOADER_EVENTS, Et = function () { function e(t) { L(this, e), this.configs = Object.assign({}, t), this.url = null, this.status = 0, this.error = null, this._reader = null, this._canceled = !1, this._destroyed = !1, this.readtype = this.configs.readtype, this.buffer = this.configs.buffer || "LOADER_BUFFER", this._loaderTaskNo = 0, this._speed = new vt, window.AbortController && (this.abortControllerEnabled = !0) } return mt(e, [{ key: "init", value: function () { this.on(gt.LADER_START, this.load.bind(this)) } }, { key: "fetch", value: function (e) { function t(t, i, n) { return e.apply(this, arguments) } return t.toString = function () { return e.toString() }, t }(function (e, t, i) { var n = this, r = null; return this.abortControllerEnabled && (this.abortController = new window.AbortController), Object.assign(t, { signal: this.abortController ? this.abortController.signal : void 0 }), Promise.race([fetch(e, t), new Promise(function (e, t) { r = setTimeout(function () { t({ code: 999, message: "fetch timeout" }), n.abortController && n.abortController.abort() }, i || 1e4) })]).then(function (e) { return r && (clearTimeout(r), r = null), e }) }) }, { key: "internalLoad", value: function (e, t, i, n) { var r = this, a = arguments.length > 4 && void 0 !== arguments[4] ? arguments[4] : 0; if (!this._destroyed) return this.loading = !0, this.fetch(this.url, t).then(function (s) { if (!r._destroyed && r.emit(gt.LOADER_RESPONSE_HEADERS, r.TAG, s.headers), s.ok) return r.status = s.status, Promise.resolve().then(function () { r._onFetchResponse(s) }), Promise.resolve(s); i-- > 0 ? r._retryTimer = setTimeout(function () { return r.emit(gt.LOADER_RETRY, r.TAG, { response: s, reason: "response not ok", retryTime: n - i }), r.internalLoad(e, t, i, n, a) }, a) : (r.loading = !1, r.emit(gt.LOADER_ERROR, r.TAG, { code: s.status || 21, message: s.status + " (" + s.statusText + ")" })) }).catch(function (s) { if (r.loading = !1, !r._destroyed) if (i-- > 0) r._retryTimer = setTimeout(function () { return r.emit(gt.LOADER_RETRY, r.TAG, { error: s, reason: "fetch error", retryTime: n - i }), r.internalLoad(e, t, i, n, a) }, a); else { if (s && "AbortError" === s.name) return; r.emit(gt.LOADER_ERROR, r.TAG, Object.assign({ code: 21 }, s)) } }) } }, { key: "load", value: function (e) { var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, i = arguments[2], n = arguments[3]; i = void 0 === i ? 3 : i, this.url = e, this._canceled = !1; var r = this.getParams(t); return this.internalLoad(e, r, i, i, n) } }, { key: "_onFetchResponse", value: function (e) { var t = this, i = this, n = this._context.getInstance(this.buffer), r = ++this._loaderTaskNo; if (!0 === e.ok) switch (this.readtype) { case 2: e.json().then(function (e) { i.loading = !1, i._canceled || i._destroyed || (n ? (n.push(e), i.emit(gt.LOADER_COMPLETE, n)) : i.emit(gt.LOADER_COMPLETE, e)) }); break; case 1: e.text().then(function (e) { i.loading = !1, i._canceled || i._destroyed || (n ? (n.push(e), i.emit(gt.LOADER_COMPLETE, n)) : i.emit(gt.LOADER_COMPLETE, e)) }); break; case 3: e.arrayBuffer().then(function (e) { i.loading = !1, i._canceled || i._destroyed || (n ? (n.push(new Uint8Array(e)), t._speed.addBytes(e.byteLength), i.emit(gt.LOADER_COMPLETE, n)) : i.emit(gt.LOADER_COMPLETE, e)) }); break; case 0: default: return this._onReader(e.body.getReader(), r) } } }, { key: "_onReader", value: function (e, t) { var i = this, n = this._context.getInstance(this.buffer); if (!n && this._reader || this._destroyed) try { this._reader.cancel() } catch (e) { } this._reader = e, !1 !== this.loading && (this._noDataTimer = setTimeout(function () { !1 !== i.loading && i.emit(gt.LOADER_COMPLETE) }, 3e3), this._reader && this._reader.read().then(function (r) { clearTimeout(i._noDataTimer); if (!i._canceled && !i._destroyed) return r.done ? (i.loading = !1, i.status = 0, void Promise.resolve().then(function () { i.emit(gt.LOADER_COMPLETE, n) })) : (n.push(r.value), i._speed.addBytes(r.value.byteLength), Promise.resolve().then(function () { i.emit(gt.LOADER_DATALOADED, n) }), i._onReader(e, t)); if (i._reader) try { i._reader.cancel() } catch (e) { } }).catch(function (e) { throw clearTimeout(i._noDataTimer), i.loading = !1, i.emit(gt.LOADER_ERROR, i.TAG, e), e })) } }, { key: "getParams", value: function (e) { var t = Object.assign({}, e), i = new Headers, n = { method: "GET", headers: i, mode: "cors", cache: "default" }; if ("object" === _t(this.configs.headers)) { var r = this.configs.headers; for (var a in r) r.hasOwnProperty(a) && i.append(a, r[a]) } if ("object" === _t(t.headers)) { var s = t.headers; for (var o in s) s.hasOwnProperty(o) && i.append(o, s[o]) } return !1 === t.cors && (n.mode = "same-origin"), t.withCredentials && (n.credentials = "include"), n } }, { key: "cancel", value: function () { if (this._reader) { try { this._reader.cancel() } catch (e) { } this._reader = null, this.loading = !1 } clearTimeout(this._noDataTimer), this._canceled = !0, this.abortController && this.abortController.abort() } }, { key: "destroy", value: function () { this._destroyed = !0, clearTimeout(this._retryTimer), clearTimeout(this._noDataTimer), this.cancel(), this._speed.reset() } }, { key: "currentSpeed", get: function () { return this._speed.lastSamplingKBps } }], [{ key: "type", get: function () { return "loader" } }]), e }(), bt = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), kt = new (function () { function e() { var t = this; x(this, e); try { var i = /xgd=(\d)/.exec(document.cookie); this._status = !!i, this._level = i && i[1] } catch (e) { this._status = !1 } ["group", "groupEnd", "log", "warn", "error"].forEach(function (e) { t[e] = function (i, n, r, a, s, o, u, l, h, c) { var f; if (t._status) { var d = i, p = [n, r, a, s, o, u, l, h, c].filter(function (e) { return void 0 !== e }); (f = console)[e].apply(f, ["[" + d + "]:"].concat(B(p))) } } }) } return bt(e, [{ key: "enable", get: function () { return this._status } }, { key: "long", get: function () { return "2" === this._level } }]), e }()), Tt = me, At = ut, St = ct, wt = dt, Rt = xe, Dt = Et, Ot = kt, Lt = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), Bt = function () { function e() { C(this, e) } return Lt(e, null, [{ key: "getSilentFrame", value: function (e, t) { if ("mp4a.40.2" === e) { if (1 === t) return new Uint8Array([0, 200, 0, 128, 35, 128]); if (2 === t) return new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]); if (3 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142]); if (4 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128, 8, 2, 56]); if (5 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 56]); if (6 === t) return new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224]) } else { if (1 === t) return new Uint8Array([1, 64, 34, 128, 163, 78, 230, 128, 186, 8, 0, 0, 0, 28, 6, 241, 193, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]); if (2 === t) return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]); if (3 === t) return new Uint8Array([1, 64, 34, 128, 163, 94, 230, 128, 186, 8, 0, 0, 0, 0, 149, 0, 6, 241, 161, 10, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 90, 94]) } return null } }]), e }(), xt = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), Ct = function () { function e(t) { M(this, e), this.TAG = "Golomb", this._buffer = t, this._bufferIndex = 0, this._totalBytes = t.byteLength, this._totalBits = 8 * t.byteLength, this._currentWord = 0, this._currentWordBitsLeft = 0 } return xt(e, [{ key: "destroy", value: function () { this._buffer = null } }, { key: "_fillCurrentWord", value: function () { var e = this._totalBytes - this._bufferIndex, t = Math.min(4, e), i = new Uint8Array(4); i.set(this._buffer.subarray(this._bufferIndex, this._bufferIndex + t)), this._currentWord = new DataView(i.buffer).getUint32(0), this._bufferIndex += t, this._currentWordBitsLeft = 8 * t } }, { key: "readBits", value: function (e) { var t = Math.min(this._currentWordBitsLeft, e), i = this._currentWord >>> 32 - t; if (e > 32) throw new Error("Cannot read more than 32 bits at a time"); return this._currentWordBitsLeft -= t, this._currentWordBitsLeft > 0 ? this._currentWord <<= t : this._totalBytes - this._bufferIndex > 0 && this._fillCurrentWord(), t = e - t, t > 0 && this._currentWordBitsLeft ? i << t | this.readBits(t) : i } }, { key: "readBool", value: function () { return 1 === this.readBits(1) } }, { key: "readByte", value: function () { return this.readBits(8) } }, { key: "_skipLeadingZero", value: function () { var e = void 0; for (e = 0; e < this._currentWordBitsLeft; e++)if (0 != (this._currentWord & 2147483648 >>> e)) return this._currentWord <<= e, this._currentWordBitsLeft -= e, e; return this._fillCurrentWord(), e + this._skipLeadingZero() } }, { key: "readUEG", value: function () { var e = this._skipLeadingZero(); return this.readBits(e + 1) - 1 } }, { key: "readSEG", value: function () { var e = this.readUEG(); return 1 & e ? e + 1 >>> 1 : -1 * (e >>> 1) } }, { key: "readSliceType", value: function () { return this.readByte(), this.readUEG(), this.readUEG() } }]), e }(), Mt = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), Ut = function () { function e() { U(this, e) } return Mt(e, null, [{ key: "_ebsp2rbsp", value: function (e) { for (var t = e, i = t.byteLength, n = new Uint8Array(i), r = 0, a = 0; a < i; a++)a >= 2 && 3 === t[a] && 0 === t[a - 1] && 0 === t[a - 2] || (n[r] = t[a], r++); return new Uint8Array(n.buffer, 0, r) } }, { key: "parseSPS", value: function (t) { var i = e._ebsp2rbsp(t), n = new Ct(i); n.readByte(); var r = n.readByte(); n.readByte(); var a = n.readByte(); n.readUEG(); var s = e.getProfileString(r), o = e.getLevelString(a), u = 1, l = 420, h = [0, 420, 422, 444], c = 8; if ((100 === r || 110 === r || 122 === r || 244 === r || 44 === r || 83 === r || 86 === r || 118 === r || 128 === r || 138 === r || 144 === r) && (3 === (u = n.readUEG()) && n.readBits(1), u <= 3 && (l = h[u]), c = n.readUEG() + 8, n.readUEG(), n.readBits(1), n.readBool())) for (var f = 3 !== u ? 8 : 12, d = 0; d < f; d++)n.readBool() && (d < 6 ? e._skipScalingList(n, 16) : e._skipScalingList(n, 64)); n.readUEG(); var p = n.readUEG(); if (0 === p) n.readUEG(); else if (1 === p) { n.readBits(1), n.readSEG(), n.readSEG(); for (var v = n.readUEG(), y = 0; y < v; y++)n.readSEG() } n.readUEG(), n.readBits(1); var _ = n.readUEG(), m = n.readUEG(), g = n.readBits(1); 0 === g && n.readBits(1), n.readBits(1); var E = 0, b = 0, k = 0, T = 0; n.readBool() && (E = n.readUEG(), b = n.readUEG(), k = n.readUEG(), T = n.readUEG()); var A = 1, S = 1, w = 0, R = !0, D = 0, O = 0; if (n.readBool()) { if (n.readBool()) { var L = n.readByte(), B = [1, 12, 10, 16, 40, 24, 20, 32, 80, 18, 15, 64, 160, 4, 3, 2], x = [1, 11, 11, 11, 33, 11, 11, 11, 33, 11, 11, 33, 99, 3, 2, 1]; L > 0 && L < 16 ? (A = B[L - 1], S = x[L - 1]) : 255 === L && (A = n.readByte() << 8 | n.readByte(), S = n.readByte() << 8 | n.readByte()) } if (n.readBool() && n.readBool(), n.readBool() && (n.readBits(4), n.readBool() && n.readBits(24)), n.readBool() && (n.readUEG(), n.readUEG()), n.readBool()) { var C = n.readBits(32), M = n.readBits(32); R = n.readBool(), w = (D = M) / (O = 2 * C) } } var U = 1; 1 === A && 1 === S || (U = A / S); var I = 0, P = 0; 0 === u ? (I = 1, P = 2 - g) : (I = 3 === u ? 1 : 2, P = (1 === u ? 2 : 1) * (2 - g)); var N = 16 * (_ + 1), F = 16 * (m + 1) * (2 - g); N -= (E + b) * I, F -= (k + T) * P; var G = Math.ceil(N * U); return n.destroy(), n = null, { profile_string: s, level_string: o, bit_depth: c, chroma_format: l, chroma_format_string: e.getChromaFormatString(l), frame_rate: { fixed: R, fps: w, fps_den: O, fps_num: D }, par_ratio: { width: A, height: S }, codec_size: { width: N, height: F }, present_size: { width: G, height: F } } } }, { key: "_skipScalingList", value: function (e, t) { for (var i = 8, n = 8, r = 0; r < t; r++)0 !== n && (n = (i + e.readSEG() + 256) % 256), i = 0 === n ? i : n } }, { key: "getProfileString", value: function (e) { switch (e) { case 66: return "Baseline"; case 77: return "Main"; case 88: return "Extended"; case 100: return "High"; case 110: return "High10"; case 122: return "High422"; case 244: return "High444"; default: return "Unknown" } } }, { key: "getLevelString", value: function (e) { return (e / 10).toFixed(1) } }, { key: "getChromaFormatString", value: function (e) { switch (e) { case 420: return "4:2:0"; case 422: return "4:2:2"; case 444: return "4:4:4"; default: return "Unknown" } } }, { key: "toVideoMeta", value: function (e) { var t = {}; e && e.codec_size && (t.codecWidth = e.codec_size.width, t.codecHeight = e.codec_size.height, t.presentWidth = e.present_size.width, t.presentHeight = e.present_size.height), t.profile = e.profile_string, t.level = e.level_string, t.bitDepth = e.bit_depth, t.chromaFormat = e.chroma_format, t.parRatio = { width: e.par_ratio.width, height: e.par_ratio.height }, t.frameRate = e.frame_rate; var i = t.frameRate.fps_den, n = t.frameRate.fps_num; return t.refSampleDuration = Math.floor(t.timescale * (i / n)), t } }]), e }(), It = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), Pt = function () { function e() { I(this, e) } return It(e, null, [{ key: "EBSP2RBSP", value: function (e) { return e.filter(function (t, i) { return i < 2 || !(0 === e[i - 2] && 0 === e[i - 1] && 3 === t) }) } }, { key: "EBSP2SODB", value: function (e) { var t = e[e.byteLength - 1]; return t && 128 === t ? e.slice(0, e.byteLength - 1) : e } }]), e }(), Nt = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), Ft = function (e) { for (var t = "", i = 0; i < e.byteLength; i++)t += String.fromCharCode(e[i]); return t }, Gt = function () { function e() { P(this, e) } return Nt(e, null, [{ key: "_resolveNalu", value: function (e) { return e.length >= 1 ? Pt.EBSP2SODB(Pt.EBSP2RBSP(e.slice(1))) : null } }, { key: "parse", value: function (t) { var i = e._resolveNalu(t), n = e.switchPayloadType(i), r = n.payloadType, a = n.offset, s = i.slice(a); switch (r) { case 5: return e.user_data_unregistered(s); default: return { code: r, content: s } } } }, { key: "switchPayloadType", value: function (e) { for (var t = new DataView(e.buffer), i = 0, n = 0; 255 === t.getUint8(n);)n++, i += 255; return i += t.getUint8(n++), { payloadType: i, offset: n } } }, { key: "getPayloadLength", value: function (e) { for (var t = new DataView(e.buffer), i = 0, n = 0; 255 === t.getUint8(n);)n++, i += 255; return i += t.getUint8(n++), { payloadLength: i, offset: n } } }, { key: "user_data_unregistered", value: function (t) { var i = e.getPayloadLength(t), n = i.payloadLength, r = i.offset; if (n < 16) return { uuid: "", content: null }; var a = t.slice(r); return { code: 5, uuid: Ft(a.slice(0, 16)), content: Ft(a.slice(16, n)) } } }]), e }(), Vt = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), jt = function () { function e() { N(this, e) } return Vt(e, null, [{ key: "getNalunits", value: function (t) { if (t.length - t.position < 4) return []; var i = t.dataview, n = t.position; return 1 === i.getInt32(n) || 0 === i.getInt16(n) && 1 === i.getInt8(n + 2) ? e.getAnnexbNals(t) : e.getAvccNals(t) } }, { key: "getAnnexbNals", value: function (t) { for (var i = [], n = e.getHeaderPositionAnnexB(t), r = n.pos, a = r; r < t.length - 4;) { var s = t.buffer.slice(r, r + n.headerLength); n.pos === t.position && t.skip(n.headerLength), a = (n = e.getHeaderPositionAnnexB(t)).pos; var o = { header: s, body: new Uint8Array(t.buffer.slice(r + s.byteLength, a)) }; e.analyseNal(o), o.type <= 9 && 0 !== o.type && i.push(o), t.skip(a - t.position), r = a } return i } }, { key: "getAvccNals", value: function (t) { for (var i = []; t.position < t.length - 4;) { var n = t.dataview.getInt32(t.dataview.position); if (!(t.length - t.position >= n)) break; var r = t.buffer.slice(t.position, t.position + 4); t.skip(4); var a = new Uint8Array(t.buffer.slice(t.position, t.position + n)); t.skip(n); var s = { header: r, body: a }; e.analyseNal(s), s.type <= 9 && 0 !== s.type && i.push(s) } return i } }, { key: "analyseNal", value: function (e) { var t = 31 & e.body[0]; switch (e.type = t, t) { case 1: e.ndr = !0; break; case 5: e.idr = !0; break; case 6: try { e.sei = Gt.parse(e.body) } catch (e) { } break; case 7: e.sps = Ut.parseSPS(e.body); break; case 8: e.pps = !0 } } }, { key: "getHeaderPositionAnnexB", value: function (e) { for (var t = e.position, i = 0, n = e.length; 3 !== i && 4 !== i && t < n - 4;)0 === e.dataview.getInt16(t) ? 1 === e.dataview.getInt16(t + 2) ? i = 4 : 1 === e.dataview.getInt8(t + 2) ? i = 3 : t++ : t++; return t === n - 4 && (0 === e.dataview.getInt16(t) ? 1 === e.dataview.getInt16(t + 2) ? i = 4 : t = n : (t++, 0 === e.dataview.getInt16(t) && 1 === e.dataview.getInt8(t) ? i = 3 : t = n)), { pos: t, headerLength: i } } }, { key: "getAvcc", value: function (e, t) { var i = new Uint8Array(e.byteLength + t.byteLength + 11); i[0] = 1, i[1] = e[1], i[2] = e[2], i[3] = e[3], i[4] = 255, i[5] = 225; var n = 6; return i.set(new Uint8Array([e.byteLength >>> 8 & 255, 255 & e.byteLength]), n), n += 2, i.set(e, n), n += e.byteLength, i[n] = 1, n++, i.set(new Uint8Array([t.byteLength >>> 8 & 255, 255 & t.byteLength]), n), n += 2, i.set(t, n), i } }]), e }(), zt = Ut, Ht = jt, Xt = Gt, Wt = Ct, Kt = Object.freeze({ __proto__: null, SpsParser: zt, NalUnit: Ht, SEIParser: Xt, Golomb: Wt }), Yt = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), qt = function () { function e(t) { F(this, e), this.TAG = "Golomb", this._buffer = t, this._bufferIndex = 0, this._totalBytes = t.byteLength, this._totalBits = 8 * t.byteLength, this._currentWord = 0, this._currentWordBitsLeft = 0 } return Yt(e, [{ key: "destroy", value: function () { this._buffer = null } }, { key: "_fillCurrentWord", value: function () { var e = this._totalBytes - this._bufferIndex, t = Math.min(4, e), i = new Uint8Array(4); i.set(this._buffer.subarray(this._bufferIndex, this._bufferIndex + t)), this._currentWord = new DataView(i.buffer).getUint32(0), this._bufferIndex += t, this._currentWordBitsLeft = 8 * t } }, { key: "readBits", value: function (e) { var t = Math.min(this._currentWordBitsLeft, e), i = this._currentWord >>> 32 - t; if (e > 32) throw new Error("Cannot read more than 32 bits at a time"); return this._currentWordBitsLeft -= t, this._currentWordBitsLeft > 0 ? this._currentWord <<= t : this._totalBytes - this._bufferIndex > 0 && this._fillCurrentWord(), t = e - t, t > 0 && this._currentWordBitsLeft ? i << t | this.readBits(t) : i } }, { key: "readBool", value: function () { return 1 === this.readBits(1) } }, { key: "readByte", value: function () { return this.readBits(8) } }, { key: "_skipLeadingZero", value: function () { if (0 === this._currentWordBitsLeft) return 0; var e = void 0; for (e = 0; e < this._currentWordBitsLeft; e++)if (0 != (this._currentWord & 2147483648 >>> e)) return this._currentWord <<= e, this._currentWordBitsLeft -= e, e; return this._fillCurrentWord(), e + this._skipLeadingZero() } }, { key: "readUEG", value: function () { var e = this._skipLeadingZero(); return this.readBits(e + 1) - 1 } }, { key: "readSEG", value: function () { var e = this.readUEG(); return 1 & e ? e + 1 >>> 1 : -1 * (e >>> 1) } }]), e }(), Zt = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), Jt = function () { function e() { G(this, e) } return Zt(e, null, [{ key: "_ebsp2rbsp", value: function (e) { for (var t = e, i = t.byteLength, n = new Uint8Array(i), r = 0, a = 0; a < i; a++)a >= 2 && 3 === t[a] && 0 === t[a - 1] && 0 === t[a - 2] || (n[r] = t[a], r++); return new Uint8Array(n.buffer, 0, r) } }, { key: "parseSPS", value: function (t) { var i = e._ebsp2rbsp(t), n = new qt(i), r = 0, a = 0, s = 0, o = 0, u = 0, l = 0, h = 0, c = 0, f = 0, d = 0, p = 0, v = 0, y = 0, _ = 0, m = {}; return n.readByte(), n.readByte(), n.readBits(4), r = n.readBits(3), n.readBits(1), m = e._readProfileTierLevel(n, r), n.readUEG(), 3 === (s = n.readUEG()) && (a = n.readBits(1)), o = n.readUEG(), u = n.readUEG(), 1 === (d = n.readBits(1)) && (l = n.readUEG(), h = n.readUEG(), c = n.readUEG(), f = n.readUEG()), p = n.readUEG(), v = n.readUEG(), 1 === d && (o -= (y = 1 !== s && 2 !== s || 0 !== a ? 1 : 2) * h + y * l, u -= (_ = 1 === s && 0 === a ? 2 : 1) * f + _ * c), n.destroy(), n = null, { width: o, height: u, general_profile_space: m.general_profile_space, general_tier_flag: m.general_tier_flag, general_profile_idc: m.general_profile_idc, general_level_idc: m.general_level_idc, chromaFormatIdc: s, bitDepthLumaMinus8: p, bitDepthChromaMinus8: v } } }, { key: "_readProfileTierLevel", value: function (e, t) { var i = 0, n = 0, r = 0, a = 0; i = e.readBits(2) || 0, n = e.readBits(1) || 0, r = e.readBits(5) || 0, e.readBits(16), e.readBits(16), e.readBits(1), e.readBits(1), e.readBits(1), e.readBits(1), e.readBits(16), e.readBits(16), e.readBits(12), a = e.readBits(8) || 0; for (var s = [], o = [], u = 0; u < t; u++)s[u] = e.readBits(1), o[u] = e.readBits(1); t > 0 && e.readBits(2 * (8 - t)); for (var l = 0; l < t; l++)0 !== s[l] && (e.readBits(2), e.readBits(1), e.readBits(5), e.readBits(16), e.readBits(16), e.readBits(4), e.readBits(16), e.readBits(16), e.readBits(12)), 0 !== o[l] && e.readBits(8); return { general_profile_space: i, general_tier_flag: n, general_profile_idc: r, general_level_idc: a } } }, { key: "_skipScalingList", value: function (e, t) { for (var i = 8, n = 8, r = 0; r < t; r++)0 !== n && (n = (i + e.readSEG() + 256) % 256), i = 0 === n ? i : n } }, { key: "getProfileString", value: function (e) { switch (e) { case 66: return "Baseline"; case 77: return "Main"; case 88: return "Extended"; case 100: return "High"; case 110: return "High10"; case 122: return "High422"; case 244: return "High444"; default: return "Unknown" } } }, { key: "getLevelString", value: function (e) { return (e / 10).toFixed(1) } }, { key: "getChromaFormatString", value: function (e) { switch (e) { case 420: return "4:2:0"; case 422: return "4:2:2"; case 444: return "4:4:4"; default: return "Unknown" } } }, { key: "toVideoMeta", value: function (e) { var t = {}; return e && e.codec_size ? (t.codecWidth = e.codec_size.width, t.codecHeight = e.codec_size.height, t.presentWidth = e.present_size.width, t.presentHeight = e.present_size.height) : e.width && e.height && (t.codecWidth = e.width, t.codecHeight = e.height, t.presentWidth = e.width, t.presentHeight = e.height), t.profile = e.profile_string, t.level = e.level_string, t.bitDepth = e.bit_depth, t.chromaFormat = e.chroma_format, t } }]), e }(), Qt = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), $t = function () { function e() { V(this, e) } return Qt(e, null, [{ key: "EBSP2RBSP", value: function (e) { return e.filter(function (t, i) { return i < 2 || !(0 === e[i - 2] && 0 === e[i - 1] && 3 === t) }) } }, { key: "EBSP2SODB", value: function (e) { var t = e[e.byteLength - 1]; return t && 128 === t ? e.slice(0, e.byteLength - 1) : e } }]), e }(), ei = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), ti = function (e) { for (var t = "", i = 0; i < e.byteLength; i++)t += String.fromCharCode(e[i]); return t }, ii = function () { function e() { j(this, e) } return ei(e, null, [{ key: "_resolveNalu", value: function (e) { return e.length >= 1 ? $t.EBSP2SODB($t.EBSP2RBSP(e.slice(1))) : null } }, { key: "parse", value: function (t) { var i = e._resolveNalu(t), n = e.switchPayloadType(i), r = n.payloadType, a = n.offset, s = i.slice(a); switch (r) { case 5: return e.user_data_unregistered(s); default: return { code: r, content: s } } } }, { key: "switchPayloadType", value: function (e) { for (var t = new DataView(e.buffer), i = 0, n = 0; 255 === t.getUint8(n);)n++, i += 255; return i += t.getUint8(n++), { payloadType: i, offset: n } } }, { key: "getPayloadLength", value: function (e) { for (var t = new DataView(e.buffer), i = 0, n = 0; 255 === t.getUint8(n);)n++, i += 255; return i += t.getUint8(n++), { payloadLength: i, offset: n } } }, { key: "user_data_unregistered", value: function (t) { var i = e.getPayloadLength(t), n = i.payloadLength, r = i.offset; if (n < 16) return { uuid: "", content: null }; var a = t.slice(r); return { code: 5, uuid: ti(a.slice(0, 16)), content: ti(a.slice(16, n)) } } }]), e }(), ni = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), ri = function () { function e() { z(this, e) } return ni(e, null, [{ key: "getNalunits", value: function (t) { if (t.length - t.position < 4) return []; var i = t.dataview, n = t.position; return 1 === i.getInt32(n) || 0 === i.getInt16(n) && 1 === i.getInt8(n + 2) ? e.getAnnexbNals(t) : e.getHvccNals(t) } }, { key: "getAnnexbNals", value: function (t) { for (var i = [], n = e.getHeaderPositionAnnexB(t), r = n.pos, a = r; r < t.length - 4;) { var s = t.buffer.slice(r, r + n.headerLength); n.pos === t.position && t.skip(n.headerLength), a = (n = e.getHeaderPositionAnnexB(t)).pos; var o = { header: s, body: new Uint8Array(t.buffer.slice(r + s.byteLength, a)) }; e.analyseNal(o), o.type <= 40 && i.push(o), t.skip(a - t.position), r = a } return i } }, { key: "getHvccNals", value: function (t) { for (var i = []; t.position < t.length - 4;) { var n = t.dataview.getInt32(t.dataview.position); if (!(t.length - t.position >= n)) break; var r = t.buffer.slice(t.position, t.position + 4); t.skip(4); var a = new Uint8Array(t.buffer.slice(t.position, t.position + n)); t.skip(n); var s = { header: r, body: a }; try { e.analyseNal(s) } catch (e) { continue } s.type <= 40 && i.push(s) } return i } }, { key: "analyseNal", value: function (e) { var t = e.body[0] >>> 1 & 63; switch (e.type = t, t) { case 0: e.slice_trail_n = !0; break; case 1: e.slice_trail_r = !0, e.key = !0; break; case 2: e.slice_tsa_n = !0; break; case 3: e.slice_tsa_r = !0, e.key = !0; break; case 4: e.slice_stsa_n = !0; break; case 5: e.slice_stsa_r = !0, e.key = !0; break; case 6: e.slice_radl_n = !0; break; case 7: e.slice_radl_r = !0, e.key = !0; break; case 8: e.slice_rasl_n = !0; break; case 9: e.slice_rasl_r = !0, e.key = !0; break; case 16: e.slice_bla_w_lp = !0; break; case 17: e.slice_bla_w_radl = !0; break; case 18: e.slice_bla_n_lp = !0; break; case 19: e.slice_idl_w_radl = !0, e.key = !0; break; case 20: e.slice_idr_n_lp = !0, e.key = !0; break; case 21: e.slice_cra_nut = !0, e.key = !0; break; case 32: e.vps = !0; break; case 33: e.sps = Jt.parseSPS(e.body); break; case 34: e.pps = !0; break; case 35: break; case 36: e.aud = !0; break; case 37: e.eob = !0; break; case 38: e.fd = !0; break; case 39: try { e.sei = ii.parse(e.body.slice(1)) } catch (e) { } break; case 40: e.sei = ii.parse(e.body.slice(1)) } } }, { key: "getHeaderPositionAnnexB", value: function (e) { for (var t = e.position, i = 0, n = e.length; 3 !== i && 4 !== i && t < n - 4;)0 === e.dataview.getInt16(t) ? 1 === e.dataview.getInt16(t + 2) ? i = 4 : 1 === e.dataview.getInt8(t + 2) ? i = 3 : t++ : t++; return t === n - 4 && (0 === e.dataview.getInt16(t) ? 1 === e.dataview.getInt16(t + 2) && (i = 4) : (t++, 0 === e.dataview.getInt16(t) && 1 === e.dataview.getInt8(t) ? i = 3 : t = n)), { pos: t, headerLength: i } } }]), e }(), ai = Jt, si = ri, oi = Object.freeze({ __proto__: null, SpsParserHEVC: ai, NalUnitHEVC: si }), ui = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), li = Rt.REMUX_EVENTS, hi = Tt.caculate, ci = function () { function e() { var t = this; X(this, e), this.TAG = "Compatibility", this.nextAudioDts = 0, this.nextVideoDts = 0, this.lastAudioSamplesLen = 0, this.lastVideoSamplesLen = 0, this.lastVideoDts = void 0, this.lastAudioDts = void 0, this.allAudioSamplesCount = 0, this.allVideoSamplesCount = 0, this._firstAudioSample = null, this._firstVideoSample = null, this.filledAudioSamples = [], this.filledVideoSamples = [], this.videoLastSample = null, this.audioLastSample = null, Object.defineProperties(this, { _videoLargeGap: { set: function (e) { t.___videoLargeGap = e, 0 !== e && t.emit(li.DETECT_LARGE_GAP, "video", e) }, get: function () { return t.___videoLargeGap || 0 } }, _audioLargeGap: { set: function (e) { t.___audioLargeGap = e, 0 !== e && t.emit(li.DETECT_LARGE_GAP, "audio", e) }, get: function () { return t.___audioLargeGap || 0 } } }), this.audioUnsyncTime = 0 } return ui(e, [{ key: "init", value: function () { this.before(li.REMUX_MEDIA, this.doFix.bind(this)) } }, { key: "reset", value: function () { this.nextAudioDts = null, this.nextVideoDts = null, this.lastAudioSamplesLen = 0, this.lastVideoSamplesLen = 0, this.lastVideoDts = void 0, this.lastAudioDts = void 0, this.lastVideoDuration = void 0, this._audioLargeGap = 0, this._videoLargeGap = 0, this.videoLastSample = null, this.audioLastSample = null, this.filledAudioSamples = [], this.filledVideoSamples = [], this.audioUnsyncTime = 0 } }, { key: "doFix", value: function () { var t = this.getFirstSample(), i = t.isFirstAudioSamples, n = t.isFirstVideoSamples; this.recordSamplesCount(), this._firstVideoSample && this.fixVideoRefSampleDuration(this.videoTrack.meta, this.videoTrack.samples); var r = e.detectChangeStream(this.videoTrack.samples, n), a = r.changed, s = r.changedIdxes; if (a) { for (var o = !1, u = 0; u < s.length; u++)this.fixChangeStreamVideo(s[u], n) && (o = !0); o || this.doFixVideo(n) } else this.doFixVideo(n); var l = e.detectChangeStream(this.audioTrack.samples, i), h = l.changed, c = l.changedIdxes; if (h) { for (var f = !1, d = 0; d < c.length; d++)this.fixChangeStreamAudio(c[d], i) && (f = !0); if (f) return; this.doFixAudio(i) } else this.doFixAudio(i); this.removeInvalidSamples() } }, { key: "doFixVideo", value: function (t, i) { for (var n = this.videoTrack, r = n.samples, a = n.meta, s = r.length, o = 0; o < s; o++) { var u = r[o]; u.originDts = u.dts, u.originPts = u.pts } if (r && s && this._firstVideoSample) { var l = r[0]; if (Ot.log(this.TAG, "doFixVideo:: lastVideoDts: " + this.lastVideoDts + " ,  _videoLargeGap: " + this._videoLargeGap + " ,streamChangeStart:" + i + ", lastVideoSample:[dts=" + (this.videoLastSample && this.videoLastSample.dts) + " , pts=" + (this.videoLastSample && this.videoLastSample.pts) + "] ,  firstDTS:" + l.dts + " ,firstPTS:" + l.pts + " ,lastDTS:" + r[s - 1].dts + " , lastPTS: " + r[s - 1].pts), !t && null === this.videoLastSample && l.options && l.options.start && void 0 !== i && (i = l.options.start), !t && void 0 === i && this.videoLastSample && e.detectVideoLargeGap(this.videoLastSample ? this.videoLastSample.dts : 0, l.dts + this._videoLargeGap) && (this._videoLargeGap = this.videoLastSample.dts + a.refSampleDuration - l.dts), 0 !== this._videoLargeGap && (e.doFixLargeGap(r, this._videoLargeGap), this._videoLargeGap !== this.preVideoGap && (this.preVideoGap = this._videoLargeGap, this.emit(li.DETECT_CHANGE_STREAM_DISCONTINUE, "video", { prevDts: this.videoLastSample && this.videoLastSample.originDts, curDts: l.originDts, duration: a.refSampleDuration }))), t || void 0 === i || (this._videoLargeGap = i - l.dts, e.doFixLargeGap(r, this._videoLargeGap)), t && this._firstAudioSample) { var h = this._firstVideoSample.originDts, c = h - (this._firstAudioSample.originDts || this._firstAudioSample.dts); if (c > 2 * a.refSampleDuration && c < 10 * a.refSampleDuration) { for (var f = Math.floor(c / a.refSampleDuration), d = 0; d < f; d++) { var p = Object.assign({}, l); p.dts = h - (d + 1) * a.refSampleDuration, p.pts = p.dts + p.cts, r.unshift(p), this.filledVideoSamples.push({ dts: p.dts, size: p.data.byteLength }) } this._firstVideoSample = this.filledVideoSamples[0] || this._firstVideoSample } else Math.abs(c) > 2 * a.refSampleDuration && !this._videoLargeGap && (this._videoLargeGap = -1 * c, e.doFixLargeGap(r, -1 * c)) } var v = r.pop(); if (r.length && (r[r.length - 1].duration = v.dts - r[r.length - 1].dts), this.videoLastSample) { var y = this.videoLastSample; y.duration = l.dts - y.dts, r.unshift(this.videoLastSample) } this.videoLastSample = v, r[r.length - 1] && (this.lastVideoDuration = r[r.length - 1].duration, this.lastVideoDts = r[r.length - 1].dts), this.videoTrack.samples = r } } }, { key: "doFixAudio", value: function (t, i) { var n = this, r = this.audioTrack, a = r.samples, s = r.meta; if (a && a.length) { this.fixAudioRefSampleDuration(s); for (var o = 0, u = a.length; o < u; o++) { var l = a[o]; l.originDts = l.dts } var h = a.length, c = Bt.getSilentFrame(s.codec, s.channelCount), f = Math.floor(s.refSampleDuration), d = this._firstAudioSample, p = a[0]; if (Ot.log(this.TAG, "doFixAudio:: audioDtsBase:" + this.audioDtsBase + " ,  _audioLargeGap: " + this._audioLargeGap + ", streamChangeStart:" + i + " ,  nextAudioDts:" + this.nextAudioDts + ",  audio: firstDTS:" + p.dts + " ,firstPTS:" + p.pts + " ,lastDTS:" + a[h - 1].dts + " , lastPTS: " + a[h - 1].pts), !t && null === this.nextAudioDts && p.options && p.options.start && void 0 !== i && (i = p.options.start), !t && void 0 === i && this.nextAudioDts && e.detectAudioLargeGap(this.nextAudioDts || 0, p.dts + this._audioLargeGap)) { var v = this.nextAudioDts - p.dts; this._audioLargeGap = Math.abs(v - this._videoLargeGap) < 200 ? this._videoLargeGap : v } if (0 !== this._audioLargeGap ? (this._audioLargeGap > 0 && e.doFixLargeGap(a, this._audioLargeGap), this._audioLargeGap !== this.preAudioGap && (this.preAudioGap = this._audioLargeGap, this.emit(li.DETECT_CHANGE_STREAM_DISCONTINUE, "audio", { prevDts: this.lastAudioOriginDts, curDts: p.originDts, duration: f }))) : t || void 0 === i && !e.detectAudioLargeGap(this.nextAudioDts, p.dts) || (void 0 !== i && (this.nextAudioDts = i), this._audioLargeGap = this.nextAudioDts - p.dts, p.options.start && !p.options.start.isContinue && e.doFixLargeGap(a, this._audioLargeGap)), this._firstVideoSample && t) { var y = this._firstVideoSample.originDts || this._firstVideoSample.dts, _ = d.dts - y; if (_ === this._videoLargeGap); else if (_ > s.refSampleDuration && _ < 10 * s.refSampleDuration) { for (var m = Math.floor((d.dts - y) / s.refSampleDuration), g = 0; g < m; g++) { var E = { data: c, datasize: c.byteLength, dts: d.dts - (g + 1) * s.refSampleDuration, filtered: 0 }; a.unshift(E), this.filledAudioSamples.push({ dts: E.dts, size: E.data.byteLength }) } this._firstAudioSample = this.filledAudioSamples[0] || this._firstAudioSample } else _ < -1 * s.refSampleDuration && (this._audioLargeGap = -1 * _, e.doFixLargeGap(a, -1 * _)) } var b = void 0, k = a[0].dts; if (this.nextAudioDts) { b = k - this.nextAudioDts; var T = Math.abs(b); if (b >= f && b < 1e4 && c) { for (var A = Math.ceil(b / f), S = 0; S < A; S++) { var w = k - (S + 1) * f, R = { dts: w > this.nextAudioDts ? w : this.nextAudioDts, pts: w > this.nextAudioDts ? w : this.nextAudioDts, datasize: c.byteLength, filtered: 0, data: c }; this.filledAudioSamples.push({ dts: R.dts, size: R.data.byteLength }), this.audioTrack.samples.unshift(R), p = R } this.emit(li.DETECT_AUDIO_GAP, b, A) } else T < s.refSampleDuration && T > 0 ? (p.dts = this.nextAudioDts, p.pts = this.nextAudioDts) : b < 0 && T < f && (e.doFixLargeGap(a, -1 * b), this.emit(li.DETECT_AUDIO_OVERLAP, b)) } for (var D = a[0].dts + f, O = 1; O < a.length;) { var L = a[O], B = L.dts - D; if (B <= -1 * f) Ot.warn("drop 1 audio sample for " + B + " ms overlap"), a.splice(O, 1); else if (B >= 10 * f) { var x = Math.round(B / f); if (x > 1e3) break; Ot.warn(this.TAG, "inject " + x + " audio frame for " + B + " ms gap"); for (var C = 0; C < x; C++) { var M = { data: c, datasize: c.byteLength, dts: D, originDts: D, filtered: 0 }; a.splice(O, 0, M), D += f, O++ } L.dts = L.pts = L.originDts = D, D += f, O++ } else L.dts = L.pts = L.originDts = D, D += f, O++ } var U = s.refSampleDuration - f; a.forEach(function (e, t) { if (0 !== t) { var i = a[t - 1]; e.dts = e.pts = i.dts + i.duration } e.duration = f, n.audioUnsyncTime = hi.fixedFloat(n.audioUnsyncTime + U, 2), n.audioUnsyncTime >= 1 && (e.duration += 1, n.audioUnsyncTime -= 1) }); var I = a[a.length - 1]; this.lastAudioDts = I.dts; var P = I.duration; this.lastAudioSamplesLen = h, this.nextAudioDts = this.lastAudioDts + (P || f), this.lastAudioOriginDts = I.originDts, this.audioTrack.samples = e.sortAudioSamples(a) } } }, { key: "fixChangeStreamVideo", value: function (e) { Ot.log(this.TAG, "fixChangeStreamVideo(), changeIdx=", e); var t = this.videoTrack, i = t.samples, n = t.meta, r = 0 === e && this.lastVideoDuration ? this.lastVideoDuration : n.refSampleDuration, a = 0 === e ? this.lastVideoDts ? this.lastVideoDts : this.getStreamChangeStart(i[0]) : i[e - 1].dts, s = i[e].dts, o = Math.abs(a - s) <= 1e4; if (this.emit(li.DETECT_CHANGE_STREAM, "video", s), o) return i[e].options ? i[e].options.isContinue = !0 : i[e].options = { isContinue: !0 }, !1; this.emit(li.DETECT_CHANGE_STREAM_DISCONTINUE, "video", { prevDts: a, curDts: s, duration: r }); var u = i.slice(0, e), l = i.slice(e), h = i[e], c = void 0; return this._videoLargeGap = 0, this.videoLastSample = null, this.lastVideoDts = null, this.lastVideoDuration = null, c = h.options && void 0 !== h.options.start ? h.options.start : a - this.videoDtsBase, this.videoTrack.samples = i.slice(0, e), this.doFixVideo(!1), this.videoTrack.samples = i.slice(e), this.doFixVideo(!1, c), this.videoTrack.samples = u.concat(l), !0 } }, { key: "fixChangeStreamAudio", value: function (e) { Ot.log(this.TAG, "fixChangeStreamAudio(), changeIdx=", e); var t = this.audioTrack, i = t.samples, n = t.meta, r = 0 === e ? this.lastAudioDts : i[e - 1].dts, a = i[e].dts, s = Math.abs(r - a) <= 1e4; if (this.emit(li.DETECT_CHANGE_STREAM, "audio", a), s) return i[e].options ? i[e].options.isContinue = !0 : i[e].options = { isContinue: !0 }, !1; this.emit(li.DETECT_CHANGE_STREAM_DISCONTINUE, "audio", { prevDts: r, curDts: a, duration: n.refSampleDuration }), this._audioLargeGap = 0; var o = this.nextAudioDts; this.nextAudioDts = null; var u = i.slice(0, e), l = i.slice(e), h = i[e], c = void 0; return h.options && void 0 !== h.options.start ? c = h.options.start : (c = o, h.options.isContinue = !0), this.audioTrack.samples = u, this.doFixAudio(!1), this.audioTrack.samples = l, this.doFixAudio(!1, c), this.audioTrack.samples = u.concat(l), !0 } }, { key: "getFirstSample", value: function () { var t = this.videoTrack.samples, i = this.audioTrack.samples, n = !1, r = !1; return !this._firstVideoSample && t.length && (this._firstVideoSample = e.findFirstVideoSample(t), this.removeInvalidSamples(), n = !0), !this._firstAudioSample && i.length && (this._firstAudioSample = e.findFirstAudioSample(i), this.removeInvalidSamples(), r = !0), { isFirstVideoSamples: n, isFirstAudioSamples: r } } }, { key: "fixVideoRefSampleDuration", value: function (t, i) { if (t) { var n = this.allVideoSamplesCount, r = this._firstVideoSample.dts, a = this.filledVideoSamples.length; if (e.isRefSampleDurationValid(t.refSampleDuration)) { if (t.refSampleDuration && i.length >= 5) { var s = (i[i.length - 1].dts - i[0].dts) / (i.length - 1); if (s > 0 && s < 1e3) { var o = Math.floor(Math.abs(t.refSampleDuration - s) <= 5 ? t.refSampleDuration : s); e.isRefSampleDurationValid(o) && (t.refSampleDuration = o) } } } else if (i.length >= 1) { var u = i[i.length - 1].dts, l = Math.floor((u - r) / (n + a - 1)); e.isRefSampleDurationValid(l) && (t.refSampleDuration = l) } e.isRefSampleDurationValid(t.refSampleDuration) || (t.refSampleDuration = 66) } } }, { key: "fixAudioRefSampleDuration", value: function (e) { e && (e.refSampleDuration = 1024 * e.timescale / e.sampleRate) } }, { key: "recordSamplesCount", value: function () { var e = this.audioTrack, t = this.videoTrack; this.allAudioSamplesCount += e.samples.length, this.allVideoSamplesCount += t.samples.length } }, { key: "removeInvalidSamples", value: function () { var e = this.audioTrack.samples[0], t = this.videoTrack.samples[0]; e && (this.audioTrack.samples = this.audioTrack.samples.filter(function (t, i) { return t === e || t.dts >= e.dts })), t && (this.videoTrack.samples = this.videoTrack.samples.filter(function (e, i) { return e === t || e.dts >= t.dts })) } }, { key: "getStreamChangeStart", value: function (e) { return e.options && e.options.start ? e.options.start - this.dtsBase : 1 / 0 } }, { key: "tracks", get: function () { return this._context.getInstance("TRACKS") } }, { key: "audioTrack", get: function () { return this.tracks && this.tracks.audioTrack ? this.tracks.audioTrack : { samples: [], meta: {} } } }, { key: "videoTrack", get: function () { return this.tracks && this.tracks.videoTrack ? this.tracks.videoTrack : { samples: [], meta: {} } } }, { key: "dtsBase", get: function () { var e = this._context.getInstance("MP4_REMUXER"); return e ? e._dtsBase : 0 } }, { key: "audioDtsBase", get: function () { var e = this._context.getInstance("MP4_REMUXER"); return e && null !== e._audioDtsBase ? e._audioDtsBase : this.dtsBase } }, { key: "videoDtsBase", get: function () { var e = this._context.getInstance("MP4_REMUXER"); return e && null !== e._videoDtsBase ? e._videoDtsBase : this.dtsBase } }], [{ key: "sortAudioSamples", value: function (e) { return 1 === e.length ? e : [].concat(H(e)).sort(function (e, t) { return e.dts - t.dts }) } }, { key: "isRefSampleDurationValid", value: function (e) { return e && e > 0 && !Number.isNaN(e) } }, { key: "findFirstAudioSample", value: function (t) { return t && 0 !== t.length ? e.sortAudioSamples(t)[0] : null } }, { key: "findFirstVideoSample", value: function (e) { if (!e.length) return null; for (var t = [].concat(H(e)).sort(function (e, t) { return e.dts - t.dts }), i = 0, n = t.length; i < n; i++)if (t[i].isKeyframe) return t[i] } }, { key: "detectVideoLargeGap", value: function (e, t) { if (null !== e) { return e - t >= 1e4 || t - e >= 1e4 } } }, { key: "detectAudioLargeGap", value: function (e, t) { if (null !== e) return e - t >= 1e3 || t - e >= 1e3 } }, { key: "doFixLargeGap", value: function (e, t) { for (var i = 0, n = e.length; i < n; i++) { var r = e[i]; r.dts += t, r.pts && (r.pts += t) } } }, { key: "detectChangeStream", value: function (e, t) { for (var i = !1, n = [], r = 0, a = e.length; r < a; r++) { var s = e[r]; !s.options || !s.options.meta || t && 0 === r || (i = !0, n.push(r)) } return { changed: i, changedIdxes: n } } }]), e }(), fi = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), di = Kt, pi = oi, vi = ci, yi = function () { function e() { W(this, e) } return fi(e, null, [{ key: "decode", value: function (t) { for (var i = [], n = t, r = 0, a = t.length; r < a;)if (n[r] < 128) i.push(String.fromCharCode(n[r])), ++r; else { if (n[r] < 192); else if (n[r] < 224) { if (e._checkContinuation(n, r, 1)) { var s = (31 & n[r]) << 6 | 63 & n[r + 1]; if (s >= 128) { i.push(String.fromCharCode(65535 & s)), r += 2; continue } } } else if (n[r] < 240) { if (e._checkContinuation(n, r, 2)) { var o = (15 & n[r]) << 12 | (63 & n[r + 1]) << 6 | 63 & n[r + 2]; if (o >= 2048 && 55296 != (63488 & o)) { i.push(String.fromCharCode(65535 & o)), r += 3; continue } } } else if (n[r] < 248 && e._checkContinuation(n, r, 3)) { var u = (7 & n[r]) << 18 | (63 & n[r + 1]) << 12 | (63 & n[r + 2]) << 6 | 63 & n[r + 3]; if (u > 65536 && u < 1114112) { u -= 65536, i.push(String.fromCharCode(u >>> 10 | 55296)), i.push(String.fromCharCode(1023 & u | 56320)), r += 4; continue } } i.push(String.fromCharCode(65533)), ++r } return i.join("") } }, { key: "_checkContinuation", value: function (e, t, i) { var n = e; if (t + i < n.length) { for (; i--;)if (128 != (192 & n[++t])) return !1; return !0 } return !1 } }]), e }(), _i = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), mi = wt.isLe, gi = { NUMBER: 0, BOOLEAN: 1, STRING: 2, OBJECT: 3, MIX_ARRAY: 8, OBJECT_END: 9, STRICT_ARRAY: 10, DATE: 11, LONE_STRING: 12 }, Ei = function () { function e() { K(this, e), this.offset = 0, this.readOffset = this.offset } return _i(e, [{ key: "resolve", value: function (e, t) { if (t < 3) throw new Error("not enough data for metainfo"); var i = {}, n = this.parseValue(e), r = this.parseValue(e, t - n.bodySize); return i[n.data] = r.data, this.resetStatus(), i } }, { key: "resetStatus", value: function () { this.offset = 0, this.readOffset = this.offset } }, { key: "parseString", value: function (e) { var t = new DataView(e, this.readOffset).getUint16(0, !mi), i = ""; i = t > 0 ? yi.decode(new Uint8Array(e, this.readOffset + 2, t)) : ""; var n = t + 2; return this.readOffset += n, { data: i, bodySize: t + 2 } } }, { key: "parseDate", value: function (e, t) { var i = new DataView(e, this.readOffset, t), n = i.getFloat64(0, !mi); return n += 60 * i.getInt16(8, !mi) * 1e3, this.readOffset += 10, { data: new Date(n), bodySize: 10 } } }, { key: "parseObject", value: function (e, t) { var i = this.parseString(e, t), n = this.parseValue(e, t - i.bodySize); return { data: { name: i.data, value: n.data }, bodySize: i.bodySize + n.bodySize, isObjEnd: n.isObjEnd } } }, { key: "parseLongString", value: function (e) { var t = new DataView(e, this.readOffset).getUint32(0, !mi), i = ""; return i = t > 0 ? yi.decode(new Uint8Array(e, this.readOffset + 2, t)) : "", this.readOffset += t + 4, { data: i, bodySize: t + 4 } } }, { key: "parseValue", value: function (e, t) { var i = new ArrayBuffer; i = e instanceof ArrayBuffer ? e : e.buffer; var n = gi.NUMBER, r = gi.BOOLEAN, a = gi.STRING, s = gi.OBJECT, o = gi.MIX_ARRAY, u = gi.OBJECT_END, l = gi.STRICT_ARRAY, h = gi.DATE, c = gi.LONE_STRING, f = new DataView(i, this.readOffset, t), d = !1, p = f.getUint8(0), v = 1; this.readOffset += 1; var y = null; switch (p) { case n: y = f.getFloat64(1, !mi), this.readOffset += 8, v += 8; break; case r: y = !!f.getUint8(1), this.readOffset += 1, v += 1; break; case a: var _ = this.parseString(i); y = _.data, v += _.bodySize; break; case s: y = {}; var m = 0; for (16777215 & f.getUint32(t - 4, !mi) && (m = 3); v < t - 4;) { var g = this.parseObject(i, t - v - m); if (g.isObjectEnd) break; y[g.data.name] = g.data.value, v += g.bodySize } v <= t - 3 && 9 === (16777215 & f.getUint32(v - 1, !mi)) && (this.readOffset += 3, v += 3); break; case o: y = {}, v += 4, this.readOffset += 4; var E = 0; for (9 == (16777215 & f.getUint32(t - 4, !mi)) && (E = 3); v < t - 8;) { var b = this.parseObject(i, t - v - E); if (b.isObjectEnd) break; y[b.data.name] = b.data.value, v += b.bodySize } v <= t - 3 && 9 === (16777215 & f.getUint32(v - 1, !mi)) && (v += 3, this.readOffset += 3); break; case u: y = null, d = !0; break; case l: y = []; var k = f.getUint32(1, !mi); v += 4, this.readOffset += 4; for (var T = 0; T < k; T++) { var A = this.parseValue(i, t - v); y.push(A.data), v += A.bodySize } break; case h: var S = this.parseDate(i, t - 1); y = S.data, v += S.bodySize; break; case c: var w = this.parseLongString(i, t - 1); y = w.data, v += w.bodySize; break; default: v = t }return { data: y, bodySize: v, isObjEnd: d } } }]), e }(), bi = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), ki = di.SpsParser, Ti = di.NalUnit, Ai = pi.SpsParserHEVC, Si = pi.NalUnitHEVC, wi = Rt.DEMUX_EVENTS, Ri = function () { function e() { Y(this, e), this._firstFragmentLoaded = !1, this._trackNum = 0, this._hasScript = !1, this._videoMetaChange = !1, this._audioMetaChange = !1, this.gopId = 0 } return bi(e, [{ key: "init", value: function () { this.on(wi.DEMUX_START, this.doParseFlv.bind(this)) } }, { key: "doParseFlv", value: function () { if (this._firstFragmentLoaded) { if (this.loaderBuffer.length < 11) return; var e = void 0, t = 1e4; try { do { e = this._parseFlvTag() } while (e && t-- > 0) } catch (e) { } this.emit(wi.DEMUX_COMPLETE) } else { if (this.loaderBuffer.length < 13) return; var i = this.loaderBuffer.shift(13); this.parseFlvHeader(i), this.doParseFlv() } } }, { key: "parseFlvHeader", value: function (t) { e.isFlvFile(t) ? (this._firstFragmentLoaded = !0, this._context.mediaInfo.hasAudio = t[4] >>> 2 == 1, this._context.mediaInfo.hasVideo = 1 == (1 & t[4]), this.initVideoTrack(), this.initAudioTrack()) : (this.emit(wi.DEMUX_ERROR, this.TAG, new Error("invalid flv file," + t.join(","))), this.doParseFlv()), this.doParseFlv() } }, { key: "initVideoTrack", value: function () { this._trackNum++; var e = new it; e.meta = new rt, e.id = e.meta.id = this._trackNum, this.tracks.videoTrack = e } }, { key: "initAudioTrack", value: function () { this._trackNum++; var e = new et; e.meta = new nt, e.id = e.meta.id = this._trackNum, this.tracks.audioTrack = e } }, { key: "_parseFlvTag", value: function () { var e = this.loaderBuffer.toInt(1, 3); if (this.loaderBuffer.length < 11 + e + 4) return null; var t = this._parseFlvTagHeader(); return t && this._processChunk(t), t } }, { key: "_parseFlvTagHeader", value: function () { var e = 0, t = {}, i = this.loaderBuffer.toInt(e, 1); if (e += 1, t.filtered = (32 & i) >>> 5, t.tagType = 31 & i, t.datasize = this.loaderBuffer.toInt(e, 3), e += 3, 8 !== t.tagType && 9 !== t.tagType && 11 !== t.tagType && 18 !== t.tagType) return this.loaderBuffer && this.loaderBuffer.length > 0 && this.loaderBuffer.shift(1), this.emit(wi.DEMUX_ERROR, this.TAG, new Error("tagType " + t.tagType), !1), null; if (this.loaderBuffer.length < t.datasize + 15) return null; this.loaderBuffer.shift(4); var n = this.loaderBuffer.toInt(0, 3); this.loaderBuffer.shift(3); var r = this.loaderBuffer.shift(1)[0]; return r > 0 && (n += 16777216 * r), t.dts = n, this.loaderBuffer.shift(3), t } }, { key: "_processChunk", value: function (e) { switch (e.tagType) { case 18: this._parseScriptData(e); break; case 8: this._parseAACData(e); break; case 9: this._parseHevcData(e); break; case 11: this.loaderBuffer.shift(3); break; default: this.loaderBuffer.shift(1) } } }, { key: "_parseScriptData", value: function (e) { var t = this.tracks.audioTrack, i = this.tracks.videoTrack, n = this.loaderBuffer.shift(e.datasize), r = (new Ei).resolve(n, n.length), a = this._context.onMetaData = r ? r.onMetaData : void 0; if (this._context.mediaInfo.duration = a.duration, "boolean" == typeof a.hasAudio && (this._context.mediaInfo.hsaAudio = a.hasAudio), "boolean" == typeof a.hasVideo && (this._context.mediaInfo.hasVideo = a.hasVideo), this._datasizeValidator(e.datasize) && (this.emit(wi.MEDIA_INFO), this._hasScript = !0), t && !t.hasSpecificConfig) { var s = t.meta; switch (a.audiosamplerate && (s.sampleRate = a.audiosamplerate), a.audiochannels && (s.channelCount = a.audiochannels), a.audiosamplerate) { case 44100: s.sampleRateIndex = 4; break; case 22050: s.sampleRateIndex = 7; break; case 11025: s.sampleRateIndex = 10 } } if (i && !i.hasSpecificConfig) { var o = i.meta; if ("number" == typeof a.framerate) { var u = Math.floor(1e3 * a.framerate); if (u > 0) { var l = u / 1e3; o.frameRate || (o.frameRate = {}), o.frameRate.fixed = !0, o.frameRate.fps = l, o.frameRate.fps_num = u, o.frameRate.fps_den = 1e3 } } } } }, { key: "_aacSequenceHeaderParser", value: function (e) { var t = {}; t.hasSpecificConfig = !0, t.objectType = e[1] >>> 3, t.originObjectType = t.objectType, t.sampleRateIndex = (7 & e[1]) << 1 | e[2] >>> 7, t.audiosamplerate = this._switchAudioSampleRate(t.sampleRateIndex), t.channelCount = (120 & e[2]) >>> 3, t.frameLength = (4 & e[2]) >>> 2, t.dependsOnCoreCoder = (2 & e[2]) >>> 1, t.extensionFlagIndex = 1 & e[2]; var i = window.navigator.userAgent.toLowerCase(), n = void 0, r = void 0, a = t.sampleRateIndex; return -1 !== i.indexOf("firefox") ? t.sampleRateIndex >= 6 ? (t.objectType = 5, r = new Array(4), n = a - 3) : (t.objectType = 2, r = new Array(2), n = a) : -1 !== i.indexOf("android") || -1 !== i.indexOf("safari") || -1 !== i.indexOf("iphone") ? (t.objectType = 2, r = new Array(2), n = a) : (t.objectType = 5, n = t.sampleRateIndex, r = new Array(4), t.sampleRateIndex >= 6 ? n = t.sampleRateIndex - 3 : 1 === t.channelCount && (t.objectType = 2, r = new Array(2), n = t.sampleRateIndex)), t.codec = "mp4a.40." + t.objectType, r[0] = t.objectType << 3, r[0] |= (15 & t.sampleRateIndex) >>> 1, r[1] = (15 & t.sampleRateIndex) << 7, r[1] |= (15 & t.channelCount) << 3, 5 === t.objectType && (r[1] |= (15 & n) >>> 1, r[2] = (1 & n) << 7, r[2] |= 8, r[3] = 0), t.config = r, t } }, { key: "_parseAACData", value: function (e) { var t = this.tracks.audioTrack; if (t) { var i = t.meta; i || (t.meta = new nt, i = t.meta, this._context.mediaInfo.hasAudio = !0); var n = this.loaderBuffer.shift(1)[0]; e.data = this.loaderBuffer.shift(e.datasize - 1); var r = (240 & n) >>> 4; if (t.format = r, 10 !== r) return void this.emit(wi.DEMUX_ERROR, this.TAG, new Error("invalid audio format: " + r)); 10 !== r || this._hasAudioSequence || (i.sampleRate = this._switchAudioSamplingFrequency(n), i.sampleRateIndex = (12 & n) >>> 2, i.frameLenth = (2 & n) >>> 1, i.channelCount = 1 & n, i.refSampleDuration = Math.floor(1024 / i.audioSampleRate * i.timescale)); var a = i.audioSampleRate, s = i.sampleRateIndex, o = i.refSampleDuration; delete e.tagType; var u = this._datasizeValidator(e.datasize); if (0 === e.data[0]) { var l = this._aacSequenceHeaderParser(e.data); a = l.audiosamplerate || i.audioSampleRate, s = l.sampleRateIndex || i.sampleRateIndex, o = Math.floor(1024 / a * i.timescale), i.channelCount = l.channelCount, i.sampleRate = a, i.sampleRateIndex = s, i.refSampleDuration = o, i.duration = this._context.mediaInfo.duration * i.timescale, i.config = l.config, i.objectType = l.objectType, i.originObjectType = l.originObjectType; var h = this._context.mediaInfo.audio; h.codec = l.codec, h.channelCount = l.channelCount, h.sampleRate = a, h.sampleRateIndex = l.audioSampleRateIndex, this._hasAudioSequence ? this.emit(wi.AUDIO_METADATA_CHANGE) : this.emit(wi.METADATA_PARSED, "audio"), this._hasAudioSequence = !0, this._audioMetaChange = !0 } else this._audioMetaChange && (e.options = { meta: t.meta }, this._audioMetaChange = !1), e.data = e.data.slice(1, e.data.length), t.samples.push(e); u || this.emit(wi.DEMUX_ERROR, this.TAG, new Error("TAG length error at " + e.datasize), !1) } } }, { key: "_parseHevcData", value: function (e) { var t = this.loaderBuffer.shift(1)[0]; e.frameType = (240 & t) >>> 4, e.isKeyframe = 1 === e.frameType; var i = 15 & t; if (this.tracks.videoTrack.codecID = i, e.avcPacketType = this.loaderBuffer.shift(1)[0], e.cts = this.loaderBuffer.toInt(0, 3), e.cts = e.cts << 8 >> 8, this.loaderBuffer.shift(3), 7 === i || 12 === i) { var n = 12 === i, r = this.loaderBuffer.shift(e.datasize - 5); if (0 === r[4] && 0 === r[5] && 0 === r[6] && 1 === r[7]) { for (var a = 0, s = 0; s < 4; s++)a = 256 * a + r[s]; a -= 4, (r = r.slice(4, r.length))[3] = a % 256, a = (a - r[3]) / 256, r[2] = a % 256, a = (a - r[2]) / 256, r[1] = a % 256, r[0] = (a - r[1]) / 256 } if (e.data = r, 0 === e.avcPacketType) n ? this._hevcSequenceHeaderParser(e.data) : this._avcSequenceHeaderParser(e.data), this._datasizeValidator(e.datasize) && (this._hasVideoSequence ? this.emit(wi.VIDEO_METADATA_CHANGE) : this.emit(wi.METADATA_PARSED, "video"), this._hasVideoSequence = !0), this._videoMetaChange = !0; else { if (!this._datasizeValidator(e.datasize)) return void this.emit(wi.DEMUX_ERROR, this.TAG, new Error("invalid video tag datasize: " + e.datasize), !1); for (var o = n ? Si.getHvccNals(new Je(e.data.buffer)) : Ti.getAvccNals(new Je(e.data.buffer)), u = n ? [19, 20, 21] : [5], l = 0; l < o.length; l++) { var h = o[l]; n ? Si.analyseNal(h) : Ti.analyseNal(h), h.sei && this.emit(wi.SEI_PARSED, Object.assign(h.sei, { dts: e.dts })), u.indexOf(h.type) > -1 && (e.isGop = !0, this.gopId++) } this.tracks.videoTrack.meta.streamType = 12 === i ? 36 : 27, this._videoMetaChange && (e.options = { meta: Object.assign({}, this.tracks.videoTrack.meta) }, this._videoMetaChange = !1), e.gopId = this.gopId, e.nals = o, e.isKeyframe && this.emit(wi.ISKEYFRAME, e.dts + e.cts), this.tracks.videoTrack.samples.push(e) } } else this.emit(wi.DEMUX_ERROR, this.TAG, new Error("video codeid is " + i), !1), e.data = this.loaderBuffer.shift(e.datasize - 1), this._datasizeValidator(e.datasize) || this.emit(wi.DEMUX_ERROR, this.TAG, new Error("invalid video tag datasize: " + e.datasize), !1), this.tracks.videoTrack.samples.push(e), this.emit(wi.DEMUX_COMPLETE); delete e.tagType } }, { key: "_avcSequenceHeaderParser", value: function (e) { var t = this.tracks.videoTrack; if (t) { var i = 0; t.meta || (t.meta = new rt, this._context.mediaInfo.hasVideo = !0); var n = t.meta; n.configurationVersion = e[0], n.avcProfileIndication = e[1], n.profileCompatibility = e[2], n.avcLevelIndication = e[3] / 10, n.nalUnitLength = 1 + (3 & e[4]); var r = 31 & e[5]; i = 6; for (var a = {}, s = 0; s < r; s++) { var o = 255 * e[i] + e[i + 1]; i += 2; for (var u = new Uint8Array(o), l = 0; l < o; l++)u[l] = e[i + l]; for (var h = "avc1.", c = 1; c < 4; c++) { var f = u[c].toString(16); f.length < 2 && (f = "0" + f), h += f } n.codec = h, i += o, this.tracks.videoTrack.meta.sps = u, a = ki.parseSPS(u) } var d = e[i]; i++; for (var p = 0; p < d; p++) { var v = 255 * e[i] + e[i + 1]; i += 2; for (var y = new Uint8Array(v), _ = 0; _ < v; _++)y[_] = e[i + _]; i += v, this.tracks.videoTrack.meta.pps = y } Object.assign(n, ki.toVideoMeta(a)); var m = this._context.mediaInfo.video; m.codec = n.codec, m.profile = n.profile, m.level = n.level, m.chromaFormat = n.chromaFormat, m.frameRate = n.frameRate, m.parRatio = n.parRatio, m.width = m.width === n.presentWidth ? m.width : n.presentWidth, m.height = m.height === n.presentHeight ? m.width : n.presentHeight, n.duration = this._context.mediaInfo.duration * n.timescale, n.avcc = new Uint8Array(e.length), n.avcc.set(e), n.streamType = 27, t.meta = n } } }, { key: "_hevcSequenceHeaderParser", value: function (e) { var t = this.tracks.videoTrack; if (t) { var i = 0; t.meta || (t.meta = new rt, this._context.mediaInfo.hasVideo = !0); var n = t.meta; n.configurationVersion = e[0], n.hevcProfileSpace = (192 & e[1]) >>> 6, n.hevcTierFlag = (32 & e[1]) >>> 5, n.hevcProfileIdc = 31 & e[1], n.hevcProfileCompatibilityFlags = [e[2], e[3], e[4], e[5]], n.hevcConstraintIndicatorFlags = [e[6], e[7], e[8], e[9], e[10], e[11]], n.hevcLevelIdc = e[12], n.minSpatialSegmentationIdc = e[13] & 15 + e[14] << 4, n.parallelismType = 3 & e[15], n.chromaFormat = 3 & e[16], n.bitDepthLumaMinus8 = 7 & e[17], n.bitDepthChromaMinus8 = 7 & e[18], n.avgFrameRate = 256 * e[19] + e[20], n.constantFrameRate = (192 & e[21]) >>> 6, n.numTemporalLayers = (56 & e[21]) >>> 3, n.temporalIdNested = (4 & e[21]) >>> 2, n.lengthSizeMinusOne = 3 & e[21]; var r = e[22]; i = 23; for (var a = {}, s = 0, o = 0, u = 0, l = !1, h = !1, c = !1, f = void 0, d = void 0, p = void 0, v = 0; v < r; v++) { s = 63 & e[i], o = 256 * e[i + 1] + e[i + 2], i += 3; for (var y = 0; y < o; y++) { switch (u = 256 * e[i] + e[i + 1], s) { case 32: l || (l = !0, f = e.slice(i + 2, i + 2 + u), this.tracks.videoTrack.meta.vps = Ai._ebsp2rbsp(f), this.tracks.videoTrack.meta.rawVps = f); break; case 33: h || (h = !0, d = e.slice(i + 2, i + 2 + u), this.tracks.videoTrack.meta.sps = Ai._ebsp2rbsp(d), this.tracks.videoTrack.meta.rawSps = d, n.codec = "hev1.1.6.L93.B0", a = Ai.parseSPS(d)); break; case 34: c || (c = !0, p = e.slice(i + 2, i + 2 + u), this.tracks.videoTrack.meta.pps = Ai._ebsp2rbsp(p), this.tracks.videoTrack.meta.rawPps = p) }i += 2 + u } } Object.assign(n, Ai.toVideoMeta(a)); var _ = this._context.mediaInfo.video; _.codec = n.codec, _.profile = n.profile, _.level = n.level, _.chromaFormat = n.chromaFormat, _.frameRate = n.frameRate, _.parRatio = n.parRatio, _.width = _.width === n.presentWidth ? _.width : n.presentWidth, _.height = _.height === n.presentHeight ? _.width : n.presentHeight, n.duration = this._context.mediaInfo.duration * n.timescale, n.streamType = 36, t.meta = n } } }, { key: "_switchAudioSampleRate", value: function (e) { return [96e3, 88200, 64e3, 48e3, 44100, 32e3, 24e3, 22050, 16e3, 12e3, 11025, 8e3, 7350][e] } }, { key: "_switchAudioSamplingFrequency", value: function (e) { return [5500, 11025, 22050, 44100, 48e3][(12 & e) >>> 2] } }, { key: "_switchAudioChannel", value: function (e) { return [1, 2][1 & e] } }, { key: "_datasizeValidator", value: function (e) { var t = this.loaderBuffer.toInt(0, 4); return this.loaderBuffer.shift(4), t === e + 11 } }, { key: "loaderBuffer", get: function () { var e = this._context.getInstance("LOADER_BUFFER"); if (e) return e; this.emit(wi.DEMUX_ERROR, this.TAG, new Error("找不到 loaderBuffer 实例")) } }, { key: "tracks", get: function () { return this._context.getInstance("TRACKS") } }, { key: "logger", get: function () { return this._context.getInstance("LOGGER") } }], [{ key: "isFlvFile", value: function (e) { return !(70 !== e[0] || 76 !== e[1] || 86 !== e[2] || 1 !== e[3]) } }, { key: "getPlayType", value: function (e) { var t = { hasVideo: !1, hasAudio: !1 }; return !0 & e && (t.hasVideo = !0), !0 & e && (t.hasAudio = !0), t } }]), e }(), Di = Z(function (e, t) { Object.defineProperty(t, "__esModule", { value: !0 }), t.default = function (e) { for (var t = 0, i = arguments.length, n = Array(i > 1 ? i - 1 : 0), r = 1; r < i; r++)n[r - 1] = arguments[r]; var a = !0, s = !1, o = void 0; try { for (var u, l = n[Symbol.iterator](); !(a = (u = l.next()).done); a = !0)t += u.value.length } catch (e) { s = !0, o = e } finally { try { !a && l.return && l.return() } finally { if (s) throw o } } var h = new e(t), c = 0, f = !0, d = !1, p = void 0; try { for (var v, y = n[Symbol.iterator](); !(f = (v = y.next()).done); f = !0) { var _ = v.value; h.set(_, c), c += _.length } } catch (e) { d = !0, p = e } finally { try { !f && y.return && y.return() } finally { if (d) throw p } } return h } }); q(Di); var Oi = q(Z(function (e) { var t = function (e) { return e && e.__esModule ? e : { default: e } }(Di); e.exports = t.default })), Li = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), Bi = function () { function e(t) { J(this, e), this.buffer = t || new Uint8Array(0) } return Li(e, [{ key: "write", value: function () { for (var e = this, t = arguments.length, i = Array(t), n = 0; n < t; n++)i[n] = arguments[n]; i.forEach(function (t) { e.buffer = Oi(Uint8Array, e.buffer, t) }) } }], [{ key: "writeUint32", value: function (e) { return new Uint8Array([e >> 24, e >> 16 & 255, e >> 8 & 255, 255 & e]) } }, { key: "readAsInt", value: function (e) { function t(e) { return e.toString(16).padStart(2, "0") } var i = ""; return e.forEach(function (e) { i += t(e) }), parseInt(i, 16) } }]), e }(), xi = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), Ci = function () { function e() { Q(this, e) } return xi(e, null, [{ key: "size", value: function (e) { return Bi.writeUint32(e) } }, { key: "initBox", value: function (t, i) { for (var n = new Bi, r = arguments.length, a = Array(r > 2 ? r - 2 : 0), s = 2; s < r; s++)a[s - 2] = arguments[s]; return n.write.apply(n, [e.size(t), e.type(i)].concat(a)), n.buffer } }, { key: "extension", value: function (e, t) { return new Uint8Array([e, t >> 16 & 255, t >> 8 & 255, 255 & t]) } }, { key: "ftyp", value: function () { return e.initBox(24, "ftyp", new Uint8Array([105, 115, 111, 109, 0, 0, 0, 1, 105, 115, 111, 109, 97, 118, 99, 49])) } }, { key: "ftypHEVC", value: function () { return e.initBox(24, "ftyp", new Uint8Array([105, 115, 111, 109, 0, 0, 0, 1, 105, 115, 111, 109, 100, 97, 115, 104])) } }, { key: "moov", value: function (t) { var i = t.type, n = t.meta, r = 8, a = e.mvhd(n.duration, n.timescale), s = void 0; s = "video" === i ? e.videoTrak(n) : e.audioTrak(n); var o = e.mvex(n.duration, n.timescale || 1e3, n.id); return [a, s, o].forEach(function (e) { r += e.byteLength }), e.initBox(r, "moov", a, s, o) } }, { key: "mvhd", value: function (t) { var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1e3, n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, 255 & i, t >>> 24 & 255, t >>> 16 & 255, t >>> 8 & 255, 255 & t, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 255, 255]); return e.initBox(8 + n.length, "mvhd", new Uint8Array(n)) } }, { key: "videoTrak", value: function (t) { var i = 8, n = e.tkhd({ id: 1, duration: t.duration, timescale: t.timescale || 1e3, width: t.presentWidth, height: t.presentHeight, type: "video" }), r = e.mdia({ type: "video", timescale: t.timescale || 1e3, duration: t.duration, avcc: t.avcc, parRatio: t.parRatio, width: t.presentWidth, height: t.presentHeight, streamType: t.streamType }); return [n, r].forEach(function (e) { i += e.byteLength }), e.initBox(i, "trak", n, r) } }, { key: "audioTrak", value: function (t) { var i = 8, n = e.tkhd({ id: 2, duration: t.duration, timescale: t.timescale || 1e3, width: 0, height: 0, type: "audio" }), r = e.mdia({ type: "audio", timescale: t.timescale || 1e3, duration: t.duration, channelCount: t.channelCount, samplerate: t.sampleRate, config: t.config }); return [n, r].forEach(function (e) { i += e.byteLength }), e.initBox(i, "trak", n, r) } }, { key: "tkhd", value: function (t) { var i = t.id, n = t.duration, r = t.width, a = t.height, s = new Uint8Array([0, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, 255 & i, 0, 0, 0, 0, n >>> 24 & 255, n >>> 16 & 255, n >>> 8 & 255, 255 & n, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 0, 0, 0, r >>> 8 & 255, 255 & r, 0, 0, a >>> 8 & 255, 255 & a, 0, 0]); return e.initBox(8 + s.byteLength, "tkhd", s) } }, { key: "edts", value: function (t) { var i = new Bi, n = t.duration, r = t.mediaTime; return i.write(e.size(36), e.type("edts")), i.write(e.size(28), e.type("elst")), i.write(new Uint8Array([0, 0, 0, 1, n >> 24 & 255, n >> 16 & 255, n >> 8 & 255, 255 & n, r >> 24 & 255, r >> 16 & 255, r >> 8 & 255, 255 & r, 0, 0, 0, 1])), i.buffer } }, { key: "mdia", value: function (t) { var i = 8, n = e.mdhd(t.timescale, t.duration), r = e.hdlr(t.type), a = e.minf(t); return [n, r, a].forEach(function (e) { i += e.byteLength }), e.initBox(i, "mdia", n, r, a) } }, { key: "mdhd", value: function () { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 1e3, i = arguments[1], n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, t >>> 24 & 255, t >>> 16 & 255, t >>> 8 & 255, 255 & t, i >>> 24 & 255, i >>> 16 & 255, i >>> 8 & 255, 255 & i, 85, 196, 0, 0]); return e.initBox(12 + n.byteLength, "mdhd", e.extension(0, 0), n) } }, { key: "hdlr", value: function (t) { var i = [0, 0, 0, 0, 0, 0, 0, 0, 118, 105, 100, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 86, 105, 100, 101, 111, 72, 97, 110, 100, 108, 101, 114, 0]; return "audio" === t && (i.splice.apply(i, [8, 4].concat([115, 111, 117, 110])), i.splice.apply(i, [24, 13].concat([83, 111, 117, 110, 100, 72, 97, 110, 100, 108, 101, 114, 0]))), e.initBox(8 + i.length, "hdlr", new Uint8Array(i)) } }, { key: "minf", value: function (t) { var i = 8, n = "video" === t.type ? e.vmhd() : e.smhd(), r = e.dinf(), a = e.stbl(t); return [n, r, a].forEach(function (e) { i += e.byteLength }), e.initBox(i, "minf", n, r, a) } }, { key: "vmhd", value: function () { return e.initBox(20, "vmhd", new Uint8Array([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0])) } }, { key: "smhd", value: function () { return e.initBox(16, "smhd", new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0])) } }, { key: "dinf", value: function () { var t = new Bi, i = [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 12, 117, 114, 108, 32, 0, 0, 0, 1]; return t.write(e.size(36), e.type("dinf"), e.size(28), e.type("dref"), new Uint8Array(i)), t.buffer } }, { key: "stbl", value: function (t) { var i = 8, n = e.stsd(t), r = e.stts(), a = e.stsc(), s = e.stsz(), o = e.stco(); return [n, r, a, s, o].forEach(function (e) { i += e.byteLength }), e.initBox(i, "stbl", n, r, a, s, o) } }, { key: "stsd", value: function (t) { var i = void 0; return i = "audio" === t.type ? e.mp4a(t) : 36 === t.streamType ? e.hvc1(t) : e.avc1(t), e.initBox(16 + i.byteLength, "stsd", e.extension(0, 0), new Uint8Array([0, 0, 0, 1]), i) } }, { key: "mp4a", value: function (t) { var i = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, t.channelCount, 0, 16, 0, 0, 0, 0, t.samplerate >> 8 & 255, 255 & t.samplerate, 0, 0]), n = e.esds(t.config); return e.initBox(8 + i.byteLength + n.byteLength, "mp4a", i, n) } }, { key: "esds", value: function () { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [43, 146, 8, 0], i = t.length, n = new Bi, r = new Uint8Array([0, 0, 0, 0, 3, 23 + i, 0, 1, 0, 4, 15 + i, 64, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5].concat([i]).concat(t).concat([6, 1, 2])); return n.write(e.size(8 + r.byteLength), e.type("esds"), r), n.buffer } }, { key: "avc1", value: function (t) { var i = new Bi, n = t.width, r = t.height, a = t.parRatio.height, s = t.parRatio.width, o = t.avcc, u = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, n >> 8 & 255, 255 & n, r >> 8 & 255, 255 & r, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 18, 100, 97, 105, 108, 121, 109, 111, 116, 105, 111, 110, 47, 104, 108, 115, 46, 106, 115, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 17, 17]), l = new Uint8Array([0, 28, 156, 128, 0, 45, 198, 192, 0, 45, 198, 192]), h = new Uint8Array([a >> 24, a >> 16 & 255, a >> 8 & 255, 255 & a, s >> 24, s >> 16 & 255, s >> 8 & 255, 255 & s]); return i.write(e.size(40 + u.byteLength + o.byteLength + l.byteLength), e.type("avc1"), u, e.size(8 + o.byteLength), e.type("avcC"), o, e.size(20), e.type("btrt"), l, e.size(16), e.type("pasp"), h), i.buffer } }, { key: "hvc1", value: function (t) { var i = new Bi, n = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, t.width >> 8 & 255, 255 & t.width, t.height >> 8 & 255, 255 & t.height, 0, 72, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 255, 255, 0, 0, 0, 122, 104, 118, 99, 67, 1, 1, 96, 0, 0, 0, 144, 0, 0, 0, 0, 0, 93, 240, 0, 252, 253, 248, 248, 0, 0, 15, 3, 160, 0, 1, 0, 24, 64, 1, 12, 1, 255, 255, 1, 96, 0, 0, 3, 0, 144, 0, 0, 3, 0, 0, 3, 0, 93, 153, 152, 9, 161, 0, 1, 0, 45, 66, 1, 1, 1, 96, 0, 0, 3, 0, 144, 0, 0, 3, 0, 0, 3, 0, 93, 160, 2, 128, 128, 45, 22, 89, 153, 164, 147, 43, 154, 128, 128, 128, 130, 0, 0, 3, 0, 2, 0, 0, 3, 0, 50, 16, 162, 0, 1, 0, 7, 68, 1, 193, 114, 180, 98, 64]); return i.write(e.size(8 + n.byteLength + 10), e.type("hvc1"), n, e.size(10), e.type("fiel"), new Uint8Array([1, 0])), i.buffer } }, { key: "stts", value: function () { var t = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]); return e.initBox(16, "stts", t) } }, { key: "stsc", value: function () { var t = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]); return e.initBox(16, "stsc", t) } }, { key: "stco", value: function () { var t = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0]); return e.initBox(16, "stco", t) } }, { key: "stsz", value: function () { var t = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]); return e.initBox(20, "stsz", t) } }, { key: "mvex", value: function (t) { var i = arguments[2], n = new Bi, r = Bi.writeUint32(t); return n.write(e.size(56), e.type("mvex"), e.size(16), e.type("mehd"), e.extension(0, 0), r, e.trex(i)), n.buffer } }, { key: "trex", value: function (t) { var i = new Uint8Array([0, 0, 0, 0, t >> 24, t >> 16 & 255, t >> 8 & 255, 255 & t, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1]); return e.initBox(8 + i.byteLength, "trex", i) } }, { key: "moof", value: function (t) { var i = 8, n = e.mfhd(), r = e.traf(t); return [n, r].forEach(function (e) { i += e.byteLength }), e.initBox(i, "moof", n, r) } }, { key: "mfhd", value: function () { var t = Bi.writeUint32(e.sequence); return e.sequence += 1, e.initBox(16, "mfhd", e.extension(0, 0), t) } }, { key: "traf", value: function (t) { var i = 8, n = e.tfhd(t.id), r = e.tfdt(t.time), a = e.sdtp(t), s = e.trun(t, a.byteLength); return [n, r, s, a].forEach(function (e) { i += e.byteLength }), e.initBox(i, "traf", n, r, s, a) } }, { key: "tfhd", value: function (t) { var i = Bi.writeUint32(t); return e.initBox(16, "tfhd", e.extension(0, 0), i) } }, { key: "tfdt", value: function (t) { return e.initBox(16, "tfdt", e.extension(0, 0), Bi.writeUint32(t)) } }, { key: "trun", value: function (t, i) { var n = new Bi, r = Bi.writeUint32(t.samples.length), a = Bi.writeUint32(92 + 16 * t.samples.length + i); return n.write(e.size(20 + 16 * t.samples.length), e.type("trun"), new Uint8Array([0, 0, 15, 1]), r, a), t.samples.forEach(function (e) { var t = e.flags; n.write(new Uint8Array([e.duration >>> 24 & 255, e.duration >>> 16 & 255, e.duration >>> 8 & 255, 255 & e.duration, e.size >>> 24 & 255, e.size >>> 16 & 255, e.size >>> 8 & 255, 255 & e.size, t.isLeading << 2 | t.dependsOn, t.isDependedOn << 6 | t.hasRedundancy << 4 | t.isNonSync, 0, 0, e.cts >>> 24 & 255, e.cts >>> 16 & 255, e.cts >>> 8 & 255, 255 & e.cts])) }), n.buffer } }, { key: "sdtp", value: function (t) { var i = new Bi; return i.write(e.size(12 + t.samples.length), e.type("sdtp"), e.extension(0, 0)), t.samples.forEach(function (e) { var t = e.flags, n = t.isLeading << 6 | t.dependsOn << 4 | t.isDependedOn << 2 | t.hasRedundancy; i.write(new Uint8Array([n])) }), i.buffer } }, { key: "mdat", value: function (t) { var i = new Bi, n = 8; t.samples.forEach(function (e) { n += e.size }), i.write(e.size(n), e.type("mdat")); var r = new Uint8Array(n), a = 0; return r.set(i.buffer, a), a += 8, t.samples.forEach(function (e) { e.buffer.forEach(function (e) { r.set(e, a), a += e.byteLength }) }), r } }]), e }(); Ci.type = function (e) { return new Uint8Array([e.charCodeAt(0), e.charCodeAt(1), e.charCodeAt(2), e.charCodeAt(3)]) }, Ci.sequence = 1; var Mi = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), Ui = Rt.REMUX_EVENTS, Ii = Rt.PLAYER_EVENTS, Pi = Ri, Ni = function () { function e() { var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0; $(this, e), this.TAG = "Mp4Remuxer", this._dtsBase = 1e3 * t, this._audioDtsBase = null, this._videoDtsBase = null, this._isDtsBaseInited = !1; var i = wt.browser; this._fillSilenceFrame = "ie" === i, this.isFirstVideo = !0, this.isFirstAudio = !0, this.videoAllDuration = 0, this.audioAllDuration = 0, this.audioRemuxed = 0, this.videoRemuxed = 0, this.mp4Durations = { keys: [] } } return Mi(e, [{ key: "init", value: function () { this.on(Ui.REMUX_MEDIA, this.remux.bind(this)), this.on(Ui.REMUX_METADATA, this.onMetaDataReady.bind(this)), this.on(Ui.DETECT_CHANGE_STREAM, this.resetDtsBase.bind(this)), this.on(Ui.DETECT_FRAG_ID_DISCONTINUE, this.seek.bind(this)), this.on(Ii.SEEK, this.seek.bind(this)) } }, { key: "destroy", value: function () { this._dtsBase = -1, this._isDtsBaseInited = !1, this.mp4Durations = { keys: [] } } }, { key: "remux", value: function () { var e = this._context.getInstance("TRACKS"), t = e.audioTrack, i = e.videoTrack; !this._isDtsBaseInited && this.calcDtsBase(t, i), this._remuxVideo(i), this._remuxAudio(t), Ot.groupEnd() } }, { key: "resetDtsBase", value: function () { this._dtsBase = 0 } }, { key: "seek", value: function (e) { Ot.log(this.TAG, "set dtsBase for seek(),time=", e), this._isDtsBaseInited ? (this._isDtsBaseInited = !1, this._dtsBase = 1e3 * e) : this._dtsBase = 1e3 * e, this._audioDtsBase = this._videoDtsBase = null } }, { key: "onMetaDataReady", value: function (e) { var t = void 0; t = "audio" === e ? this._context.getInstance("TRACKS").audioTrack : this._context.getInstance("TRACKS").videoTrack; var i = this._context.getInstance("PRE_SOURCE_BUFFER"), n = i.getSource(e); n || (n = i.createSource(e)), n.mimetype = t.meta.codec, n.init = this.remuxInitSegment(e, t.meta), this.emit(Ui.INIT_SEGMENT, e) } }, { key: "remuxInitSegment", value: function (e, t) { Ot.log(this.TAG, "remuxInitSegment: type=", e); var i = new Bi, n = 36 === t.streamType ? Ci.ftypHEVC() : Ci.ftyp(), r = Ci.moov({ type: e, meta: t }); return i.write(n, r), i } }, { key: "calcDtsBase", value: function (e, t) { if (!e && t.samples.length) { var i = t.samples[0], n = void 0; return i.options && i.options.start && (n = i.options.start), this._videoDtsBase = i.dts - (n || this._dtsBase), void (this._isDtsBaseInited = !0) } if (e && e.samples.length || t && t.samples.length) { var r = null, a = null, s = null; if (e && e.samples && e.samples.length) { var o = e.samples[0]; r = o.dts, o.options && o.options.start && (s = o.options.start) } if (t && t.samples && t.samples.length) { var u = t.samples[0]; a = u.dts, u.options && u.options.start && (s = u.options.start) } this._videoDtsBase = (a || r) - (s || this._dtsBase), this._audioDtsBase = (r || a) - (s || this._dtsBase), this._dtsBase = Math.min(a, r), this._isDtsBaseInited = !0, Ot.log(this.TAG, "calcDtsBase"), Ot.log(this.TAG, "video first dts: " + a + " , start:" + s + " , _videoDtsBase:" + this._videoDtsBase + " , _dtsBase:" + this._dtsBase), Ot.log(this.TAG, "audio first dts: " + r + " , start:" + s + " , _audioDtsBase:" + this._audioDtsBase + ", _dtsBase:" + this._dtsBase) } } }, { key: "_remuxVideo", value: function (e) { var t = this, i = e || {}; if (e && e.samples && e.samples.length) { var n = i.samples; if (i.meta) { for (var r = -1, a = null, s = [], o = { samples: [] }, u = 1e4; n.length && u-- > 0;) { var l = n.shift(), h = l.isKeyframe, c = l.options; if (!this.isFirstVideo && c && c.meta) { a = this.remuxInitSegment("video", c.meta), c.meta = null, n.unshift(l), c.isContinue || (this._videoDtsBase = 0); break } var f = Math.max(0, l.dts - this.videoDtsBase); -1 === r && (r = f); var d = void 0, p = void 0; void 0 !== l.pts && (d = (p = l.pts - this._dtsBase) - f), void 0 !== l.cts && (p = l.cts + f, d = l.cts); var v = { buffer: [], size: 0 }, y = 0; y = l.duration ? l.duration : n.length >= 1 ? n[0].dts - this.videoDtsBase - f : s.length >= 1 ? s[s.length - 1].duration : this.videoMeta.refSampleDuration, this.videoAllDuration += y, Ot.long && Ot.log(this.TAG, "video dts " + f, "pts " + p, "cts: " + d, h, "originDts " + l.originDts, "duration " + y), y >= 0 && (o.samples.push(v), v.buffer.push(l.data), v.size += l.data.byteLength, this.mp4Durations[p] && (d = (p += this.mp4Durations[p]) - f), s.push({ dts: f, cts: Math.abs(d) > 2e3 ? y : d, pts: p, data: l.data, size: l.data.byteLength, isKeyframe: h, duration: y, flags: { isLeading: 0, dependsOn: h ? 2 : 1, isDependedOn: h ? 1 : 0, hasRedundancy: 0, isNonSync: h ? 0 : 1 }, originDts: f, type: "video" }), this.mp4Durations[p] = y, this.mp4Durations.keys.push(p)), h && this.emit(Ui.RANDOM_ACCESS_POINT, p) } if (this.mp4Durations.keys.length > 1e4) { var _ = this.mp4Durations; this.mp4Durations = {}, this.mp4Durations.keys = _.keys.slice(-100), this.mp4Durations.keys.forEach(function (e) { t.mp4Durations[e] = _[e] }) } s.length && Ot.log(this.TAG, "remux to mp4 video:", [r / 1e3, s[s.length - 1].dts / 1e3]); var m = new Bi; if (s.length && i.meta) { var g = Ci.moof({ id: i.meta.id, time: r, samples: s }), E = Ci.mdat(o); m.write(g, E), this.writeToSource("video", m, s[s.length - 1].pts - s[0].pts) } if (a && (this.writeToSource("video", a), n.length)) return i.samples = n, this._remuxVideo(i); this.isFirstVideo = !1, this.emit(Ui.MEDIA_SEGMENT, "video"), i.samples = [], i.length = 0 } } } }, { key: "_remuxAudio", value: function (e) { var t = (e || {}).samples, i = -1, n = [], r = null, a = { samples: [] }; if (t && t.length) { for (var s = 1e4, o = !1; t.length && s-- > 0;) { var u = t.shift(), l = u.data, h = u.options; if (!this.isFirstAudio && h && h.meta) { r = this.remuxInitSegment("audio", h.meta), h.meta = null, t.unshift(u), h.isContinue || (this._audioDtsBase = 0); break } var c = Math.max(0, u.dts - this.audioDtsBase), f = u.originDts; o || (i = c, o = !0); var d = 0; d = u.duration ? u.duration : this.audioMeta.refSampleDurationFixed ? this.audioMeta.refSampleDurationFixed : t.length >= 1 ? t[0].dts - this.audioDtsBase - c : n.length >= 1 ? n[n.length - 1].duration : this.audioMeta.refSampleDuration, Ot.long && Ot.log(this.TAG, "audio dts " + c, "pts " + c, "originDts " + f, "duration " + d), this.audioAllDuration += d; var p = { dts: c, pts: c, cts: 0, size: l.byteLength, duration: u.duration ? u.duration : d, flags: { isLeading: 0, dependsOn: 1, isDependedOn: 0, hasRedundancy: 0, isNonSync: 0 }, isKeyframe: !0, originDts: f, type: "audio" }, v = { buffer: [], size: 0 }; d >= 0 && (v.buffer.push(l), v.size += l.byteLength, a.samples.push(v), n.push(p)) } var y = new Bi; if (n.length && e.meta) { Ot.log(this.TAG, "remux to mp4 audio:", [i / 1e3, n[n.length - 1].dts / 1e3]); var _ = Ci.moof({ id: e.meta.id, time: i, samples: n }), m = Ci.mdat(a); y.write(_, m), this.writeToSource("audio", y, n[n.length - 1].dts - n[0].dts) } if (r && (this.writeToSource("audio", r), t.length)) return e.samples = t, this._remuxAudio(e); this.isFirstAudio = !1, this.emit(Ui.MEDIA_SEGMENT, "audio", y), e.samples = [], e.length = 0 } } }, { key: "writeToSource", value: function (e, t, i) { var n = this._context.getInstance("PRE_SOURCE_BUFFER"), r = n.getSource(e); r || (r = n.createSource(e)), r.data.push(t), i && (r.bufferDuration = i + (r.bufferDuration || 0)) } }, { key: "initSilentAudio", value: function (t, i) { var n = e.getSilentFrame(this._audioMeta.channelCount); return { dts: t, pts: t, cts: 0, duration: i, unit: n, size: n.byteLength, originDts: t, type: "video" } } }, { key: "destroy", value: function () { this._player = null } }, { key: "videoMeta", get: function () { return this._context.getInstance("TRACKS").videoTrack.meta } }, { key: "audioMeta", get: function () { return this._context.getInstance("TRACKS").audioTrack.meta } }, { key: "videoDtsBase", get: function () { return null !== this._videoDtsBase ? this._videoDtsBase : this._dtsBase } }, { key: "audioDtsBase", get: function () { return null !== this._audioDtsBase ? this._audioDtsBase : this._dtsBase } }], [{ key: "getSilentFrame", value: function (e) { return 1 === e ? new Uint8Array([0, 200, 0, 128, 35, 128]) : 2 === e ? new Uint8Array([33, 0, 73, 144, 2, 25, 0, 35, 128]) : 3 === e ? new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 142]) : 4 === e ? new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 128, 44, 128, 8, 2, 56]) : 5 === e ? new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 56]) : 6 === e ? new Uint8Array([0, 200, 0, 128, 32, 132, 1, 38, 64, 8, 100, 0, 130, 48, 4, 153, 0, 33, 144, 2, 0, 178, 0, 32, 8, 224]) : null } }]), e }(), Fi = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), Gi = Rt.REMUX_EVENTS, Vi = Rt.DEMUX_EVENTS, ji = Rt.LOADER_EVENTS, zi = Rt.MSE_EVENTS, Hi = "FLVController", Xi = function () { function e() { ee(this, e) } return Fi(e, [{ key: "warn", value: function () { } }]), e }(), Wi = function () { function e(t) { var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0; ee(this, e), this.TAG = Hi, this._player = t, this.state = { initSegmentArrived: !1, randomAccessPoints: [] }, this.configs = Object.assign({ retryTimes: 3 }, i), this.mse = n, this.bufferClearTimer = null, this._handleTimeUpdate = this._handleTimeUpdate.bind(this) } return Fi(e, [{ key: "init", value: function () { this.mse || (this.mse = new St({ container: this._player.video }, this._context), this.mse.init()), this.initComponents(), this.initListeners() } }, { key: "initComponents", value: function () { this._context.registry("FETCH_LOADER", Dt), this._context.registry("LOADER_BUFFER", $e), this._context.registry("FLV_DEMUXER", Pi), this._context.registry("TRACKS", Qe), this._context.registry("MP4_REMUXER", Ni)(this._player.currentTime), this._context.registry("PRE_SOURCE_BUFFER", Ze), !1 !== this._player.config.compatibility && this._context.registry("COMPATIBILITY", vi), this._context.registry("LOGGER", Xi) } }, { key: "initListeners", value: function () { this.on(ji.LOADER_DATALOADED, this._handleLoaderDataLoaded.bind(this)), this.on(ji.LOADER_ERROR, this._handleNetworkError.bind(this)), this.on(ji.LOADER_RETRY, this._handleFetchRetry.bind(this)), this.on(Vi.MEDIA_INFO, this._handleMediaInfo.bind(this)), this.on(Vi.METADATA_PARSED, this._handleMetadataParsed.bind(this)), this.on(Vi.DEMUX_COMPLETE, this._handleDemuxComplete.bind(this)), this.on(Vi.DEMUX_ERROR, this._handleDemuxError.bind(this)), this.on(Vi.SEI_PARSED, this._handleSEIParsed.bind(this)), this.on(Gi.INIT_SEGMENT, this._handleAppendInitSegment.bind(this)), this.on(Gi.MEDIA_SEGMENT, this._handleMediaSegment.bind(this)), this.on(Gi.RANDOM_ACCESS_POINT, this._handleAddRAP.bind(this)), this.on(Gi.REMUX_ERROR, this._handleRemuxError.bind(this)), this.on(zi.SOURCE_UPDATE_END, this._handleSourceUpdateEnd.bind(this)), this.on(zi.MSE_ERROR, this._handleMseError.bind(this)), this._player.on("timeupdate", this._handleTimeUpdate) } }, { key: "_handleMediaInfo", value: function () { this._context.mediaInfo || this.emit(Vi.DEMUX_ERROR, new Error("failed to get mediainfo")) } }, { key: "_handleLoaderDataLoaded", value: function () { this.emitTo("FLV_DEMUXER", Vi.DEMUX_START) } }, { key: "_handleMetadataParsed", value: function (e) { this.emit(Gi.REMUX_METADATA, e) } }, { key: "_handleSEIParsed", value: function (e) { this._player.emit("SEI_PARSED", e) } }, { key: "_handleDemuxComplete", value: function () { this.emit(Gi.REMUX_MEDIA, "flv") } }, { key: "_handleRemuxError", value: function (e, t, i) { void 0 === i && (i = !1), this._player.emit("error", { errorType: "parse", ex: "[" + e + "]: " + t.message, errd: {} }), this._onError(Gi.REMUX_ERROR, e, t, i) } }, { key: "_handleAppendInitSegment", value: function () { this.state.initSegmentArrived = !0, this.mse.addSourceBuffers() } }, { key: "_handleMediaSegment", value: function () { this.mse.addSourceBuffers(), this.mse.doAppend() } }, { key: "_handleSourceUpdateEnd", value: function () { var e = this._player.currentTime, t = this._player.video, i = this._player.config.preloadTime || 5, n = t.buffered.length; if (0 !== n) { var r = t.buffered.end(n - 1); r - e > 2 * i && !this._player.paused && (this._player.currentTime = r - i), this.mse.doAppend(), this._player.paused && this._handleTimeUpdate() } } }, { key: "_handleTimeUpdate", value: function () { var e = this, t = this._player.currentTime, i = this._player.video, n = i.buffered; if (n && n.length) { var r = [0, 0], a = i.currentTime; if (n) for (var s = 0, o = n.length; s < o && (r[0] = n.start(s), r[1] = n.end(s), !(r[0] <= a && a <= r[1])); s++); var u = r[0], l = r[1]; if (a < u) return void (i.currentTime = u); if (t - u > 10 || n.length > 1) { if (this.bufferClearTimer || !this.state.randomAccessPoints.length) return; for (var h = 1 / 0, c = 0; c < this.state.randomAccessPoints.length; c++) { var f = Math.ceil(this.state.randomAccessPoints[c] / 1e3); if (f > t - 10) break; h = f } this.mse.remove(Math.max(Math.min(h - 1, t - 10, l - 10), .1), 0), this.bufferClearTimer = setTimeout(function () { e.bufferClearTimer = null }, 5e3) } } } }, { key: "_handleNetworkError", value: function (e, t) { this._player.emit("error", { code: t.code, errorType: "network", ex: "[" + e + "]: " + t.message, errd: {} }), this._onError(ji.LOADER_ERROR, e, t, !0) } }, { key: "_handleFetchRetry", value: function (e, t) { this._player.emit("retry", Object.assign({ tag: e }, t)) } }, { key: "_handleDemuxError", value: function (e, t, i) { void 0 === i && (i = !1), this._player.emit("error", { errorType: "parse", ex: "[" + e + "]: " + t.message, errd: {} }), this._onError(Vi.DEMUX_ERROR, e, t, i) } }, { key: "_handleMseError", value: function (e, t, i) { void 0 === i && (i = !1), this._onError(zi.MSE_ERROR, e, t, i) } }, { key: "_handleAddRAP", value: function (e) { this.state.randomAccessPoints && this.state.randomAccessPoints.push(e) } }, { key: "_onError", value: function (e, t, i, n) { var r = { errorType: e, errorDetails: "[" + t + "]: " + (i ? i.message : ""), errorFatal: n || !1 }; this._player.emit("FLV_ERROR", r) } }, { key: "seek", value: function () { this.state.initSegmentArrived || this.loadData() } }, { key: "loadData", value: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._player.config.url, t = this._player.config.retry || {}, i = t.count, n = t.delay; this.emit(ji.LADER_START, e, {}, i, n) } }, { key: "pause", value: function () { var e = this._context.getInstance("FETCH_LOADER"); e && e.cancel() } }, { key: "destroy", value: function () { this._player.off("timeupdate", this._handleTimeUpdate), this._player = null, this.mse = null, this.state.randomAccessPoints = [] } }]), e }(), Ki = { Mp4Remuxer: Ni, FlvDemuxer: Pi, FetchLoader: Dt, Tracks: Qe, PreSource: Ze, XgBuffer: $e, Compatibility: vi, Mse: St }, Yi = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) { return typeof e } : function (e) { return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e }, qi = function e(t, i, n) { null === t && (t = Function.prototype); var r = Object.getOwnPropertyDescriptor(t, i); if (void 0 === r) { var a = Object.getPrototypeOf(t); return null === a ? void 0 : e(a, i, n) } if ("value" in r) return r.value; var s = r.get; if (void 0 !== s) return s.call(n) }, Zi = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), Ji = Rt.FlvAllowedEvents, Qi = function (t) { function i(e) { te(this, i); var t = ie(this, (i.__proto__ || Object.getPrototypeOf(i)).call(this, e)); return t.config = Object.assign({}, Ki, t.config), t.initEvents(), t.loaderCompleteTimer = null, t.hasPlayed = !1, t } return ne(i, t), Zi(i, null, [{ key: "isSupported", value: function () { return window.MediaSource && window.MediaSource.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"') } }, { key: "install", value: function (t, i) { return e.install(t, i) } }]), Zi(i, [{ key: "start", value: function () { this.started || (this.context && this.context.destroy(), this.context = new At(Ji), this.initFlv(), this.context.init(), qi(i.prototype.__proto__ || Object.getPrototypeOf(i.prototype), "start", this).call(this, this.flv.mse.url), this.loadData(), this.started = !0) } }, { key: "initFlvEvents", value: function (t) { var i = this, n = this; t.once(Rt.REMUX_EVENTS.INIT_SEGMENT, function () { e.util.addClass(n.root, "xgplayer-is-live") }), t.once(Rt.LOADER_EVENTS.LOADER_COMPLETE, function () { if (n.paused) n.emit("ended"); else if (i.video) { var e = i.getBufferedRange()[1] - i.currentTime; setTimeout(function () { i.emit("ended") }, 1e3 * e) } }) } }, { key: "initFlvBackupEvents", value: function (e, t) { var n = this, r = 3; e.on(Rt.REMUX_EVENTS.MEDIA_SEGMENT, function () { 0 === (r -= 1) && (n.flv = e, n.mse.resetContext(t), n.context.destroy(), n.context = t, n.paused && qi(i.prototype.__proto__ || Object.getPrototypeOf(i.prototype), "play", n).call(n)) }), e.once(Rt.LOADER_EVENTS.LOADER_COMPLETE, function () { if (n.paused) n.emit("ended"); else if (n.video) { var e = n.getBufferedRange()[1] - n.currentTime; setTimeout(function () { n.emit("ended") }, 1e3 * e) } }), e.once(Rt.LOADER_EVENTS.LOADER_ERROR, function () { t.destroy() }) } }, { key: "initEvents", value: function () { var e = this; this.on("seeking", function () { var t = e.currentTime, i = e.getBufferedRange(); (t > i[1] || t < i[0]) && e.flv.seek(e.currentTime) }), this.once("play", function () { e.hasPlayed = !0 }) } }, { key: "initFlv", value: function () { var e = this.context.registry("FLV_CONTROLLER", Wi)(this, { retryTimes: this.config.retryTimes }); return this.initFlvEvents(e), this.flv = e, this.mse = e.mse, e } }, { key: "play", value: function () { var e = this; return this.paused && this.hasPlayed ? this.mse.cleanBuffers().then(function () { return e.started = !1, e.start(), qi(i.prototype.__proto__ || Object.getPrototypeOf(i.prototype), "play", e).call(e) }) : (this.hasPlayed = !0, qi(i.prototype.__proto__ || Object.getPrototypeOf(i.prototype), "play", this).call(this)) } }, { key: "pause", value: function () { qi(i.prototype.__proto__ || Object.getPrototypeOf(i.prototype), "pause", this).call(this), this.flv && (this.flv.pause(), this.hasPlayed = !0) } }, { key: "loadData", value: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.currentTime; this.flv && this.flv.seek(e) } }, { key: "destroy", value: function () { var e = this; return qi(i.prototype.__proto__ || Object.getPrototypeOf(i.prototype), "destroy", this).call(this), new Promise(function (t) { e._destroy().then(t).catch(t), setTimeout(function () { t() }, 50) }) } }, { key: "_destroy", value: function () { var e = this; this.context && this.context.destroy(), this.newContext && this.newContext.destroy(); var t = function () { e.flv = null, e.context = null, e.newFlv = null, e.newContext = null }; return this.flv && this.flv.mse ? this.flv.mse.destroy().then(function () { t() }) : Promise.resolve().then(function () { t() }) } }, { key: "switchURL", value: function (e) { !(arguments.length > 1 && void 0 !== arguments[1]) || arguments[1] || (this.pause(), this.context.destroy()); var t = new At(Ji), i = t.registry("FLV_CONTROLLER", Wi)(this, { retryTimes: this.config.retryTimes }, this.mse); this.newContext = t, this.newFlv = i, t.init(), this.initFlvBackupEvents(i, t), i.loadData(e) } }, { key: "src", get: function () { return this.currentSrc }, set: function (e) { this.switchURL(e) } }]), i }(e), $i = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), en = di.NalUnit, tn = pi.NalUnitHEVC, nn = Rt.DEMUX_EVENTS, rn = Rt.LOADER_EVENTS, an = "FLVController", sn = function () { function t(e) { re(this, t), this.TAG = an, this._player = e, this.state = { initSegmentArrived: !1, randomAccessPoints: [] }, this.bufferClearTimer = null } return $i(t, [{ key: "init", value: function () { this.initComponents(), this.initListeners() } }, { key: "initComponents", value: function () { var e = this._player.config, t = e.FetchLoader, i = e.XgBuffer, n = e.FlvDemuxer, r = e.Tracks, a = e.Logger; this._context.registry("FETCH_LOADER", t), this._context.registry("LOADER_BUFFER", i), this._context.registry("FLV_DEMUXER", n), this._context.registry("TRACKS", r), this._context.registry("LOGGER", a) } }, { key: "initListeners", value: function () { this.on(rn.LOADER_DATALOADED, this._handleLoaderDataLoaded.bind(this)), this.on(rn.LOADER_ERROR, this._handleNetworkError.bind(this)), this.on(nn.MEDIA_INFO, this._handleMediaInfo.bind(this)), this.on(nn.METADATA_PARSED, this._handleMetadataParsed.bind(this)), this.on(nn.DEMUX_COMPLETE, this._handleDemuxComplete.bind(this)), this.on(nn.DEMUX_ERROR, this._handleDemuxError.bind(this)), this.on(nn.SEI_PARSED, this._handleSEIParsed.bind(this)) } }, { key: "_handleMediaInfo", value: function () { this._context.mediaInfo ? this._player.video && this._player.video.handleMediaInfo() : this.emit(nn.DEMUX_ERROR, new Error("failed to get mediainfo")) } }, { key: "_handleLoaderDataLoaded", value: function () { this.emitTo("FLV_DEMUXER", nn.DEMUX_START) } }, { key: "_handleSEIParsed", value: function (e) { this._player.emit("SEI_PARSED", e) } }, { key: "_handleDemuxComplete", value: function () { var e = this; if (this._player.video) { var t = this._context.getInstance("TRACKS"), i = t.videoTrack, n = t.audioTrack; i.samples.forEach(function (t) { if (!t.analyzed) { t.analyzed = !0; var n = new Je(t.data.buffer), r = void 0, a = (r = e._isHEVC(i.meta) ? tn.getHvccNals(n) : en.getNalunits(n)).reduce(function (e, t) { return e + 4 + t.body.byteLength }, 0), s = new Uint8Array(a), o = 0; r.forEach(function (e) { s.set([0, 0, 0, 1], o), o += 4, s.set(new Uint8Array(e.body), o), o += e.body.byteLength }), t.data = s } }), this._player.video.onDemuxComplete(i, n) } } }, { key: "_handleVisibilityChange", value: function (e) { var t = !e; t || this._player.paused ? t && this._player.paused && this._player.play() : this._player.pause() } }, { key: "_handleMetadataParsed", value: function (e) { if ("audio" === e) { var t = this._context.getInstance("TRACKS").audioTrack; t && t.meta && this._setMetaToAudio(t.meta) } else { var i = this._context.getInstance("TRACKS").videoTrack; i && i.meta && this._setMetaToVideo(i.meta) } } }, { key: "_setMetaToAudio", value: function (e) { this._player.video && this._player.video.setAudioMeta(e) } }, { key: "_setMetaToVideo", value: function (e) { this._player.video && this._player.video.setVideoMeta(e) } }, { key: "_handleAppendInitSegment", value: function () { this.state.initSegmentArrived = !0 } }, { key: "_handleNetworkError", value: function (t, i) { this._player.emit("error", new e.Errors("network", this._player.config.url)), this._onError(rn.LOADER_ERROR, t, i, !0, "MEDIA_ERR_NETWORK") } }, { key: "_handleDemuxError", value: function (t, i, n) { void 0 === n && (n = !1), this._player.emit("error", new e.Errors("parse", this._player.config.url)), this._onError(nn.DEMUX_ERROR, t, i, n, "MEDIA_ERR_DECODE") } }, { key: "_handleAddRAP", value: function (e) { this.state.randomAccessPoints && this.state.randomAccessPoints.push(e) } }, { key: "_onError", value: function (e, t, i, n, r) { var a = "[" + t + "]: " + i.message, s = { errorType: e, errorDetails: a, errorFatal: n || !1 }; this._player.emit("FLV_ERROR", s), this._player.video && this._player.video.handleErr(r, a) } }, { key: "_isHEVC", value: function (e) { return e && "hev1.1.6.L93.B0" === e.codec } }, { key: "seek", value: function () { this.state.initSegmentArrived || this.loadData() } }, { key: "loadData", value: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this._player.config.url; this.emit(rn.LADER_START, e) } }, { key: "pause", value: function () { var e = this._context.getInstance("FETCH_LOADER"); e && e.cancel() } }, { key: "destroy", value: function () { this._player = null, this.state.randomAccessPoints = [] } }]), t }(), on = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), un = function () { function e() { ae(this, e) } return on(e, [{ key: "warn", value: function () { } }]), e }(), ln = { FlvDemuxer: Pi, FetchLoader: Dt, Tracks: Qe, XgBuffer: $e, Logger: un }, hn = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) { return typeof e } : function (e) { return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e }, cn = function e(t, i, n) { null === t && (t = Function.prototype); var r = Object.getOwnPropertyDescriptor(t, i); if (void 0 === r) { var a = Object.getPrototypeOf(t); return null === a ? void 0 : e(a, i, n) } if ("value" in r) return r.value; var s = r.get; if (void 0 !== s) return s.call(n) }, fn = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), dn = Rt.FlvAllowedEvents, pn = function (t) { function i(e) { se(this, i), e.mediaType || (e.mediaType = "mobile-video", e.videoConfig ? e.videoConfig.preloadtime = e.preloadTime || 5 : e.videoConfig = { preloadtime: e.preloadTime || 5 }); var t = oe(this, (i.__proto__ || Object.getPrototypeOf(i)).call(this, e)); return t.config = Object.assign({}, ln, t.config), t.playerInited || t.initPlayer(e), t } return ue(i, t), fn(i, null, [{ key: "isSupported", value: function () { var e = "WebAssembly" in window, t = !1; return "customElements" in window && window.customElements.define && (t = window.customElements.get("mobile-video")), e && t } }]), fn(i, [{ key: "initPlayer", value: function () { this.video.width = Number.parseInt(this.config.width || 600), this.video.height = Number.parseInt(this.config.height || 337.5), this.video.style.outline = "none", this.context = new At(dn), this.playerInited = !0 } }, { key: "start", value: function () { this.playerInited || this.initPlayer(), this.initFlv(), this.context.init(), this.flv.seek(0), cn(i.prototype.__proto__ || Object.getPrototypeOf(i.prototype), "start", this).call(this, this.config.url) } }, { key: "initFlvEvents", value: function (e) { var t = this; e.once(Rt.LOADER_EVENTS.LOADER_COMPLETE, function () { if (!t.paused) var e = setInterval(function () { var i = t.getBufferedRange()[1]; Math.abs(t.currentTime - i) < .5 && (t.video && t.video.handleEnded(), window.clearInterval(e)) }, 200) }) } }, { key: "initFlv", value: function () { var e = this.context.registry("FLV_CONTROLLER", sn)(this); this.initFlvEvents(e), this.flv = e } }, { key: "play", value: function () { if (this._hasStart && this.paused) { this._destroy(), this.context = new At(dn); var e = this.context.registry("FLV_CONTROLLER", sn)(this); this.initFlvEvents(e), this.flv = e, this.context.init(), this.loadData(), cn(i.prototype.__proto__ || Object.getPrototypeOf(i.prototype), "start", this).call(this), cn(i.prototype.__proto__ || Object.getPrototypeOf(i.prototype), "play", this).call(this) } else cn(i.prototype.__proto__ || Object.getPrototypeOf(i.prototype), "play", this).call(this), this.addLiveFlag() } }, { key: "pause", value: function () { cn(i.prototype.__proto__ || Object.getPrototypeOf(i.prototype), "pause", this).call(this), this.flv && this.flv.pause() } }, { key: "loadData", value: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.currentTime; this.flv && this.flv.seek(e) } }, { key: "destroy", value: function () { var e = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0]; this._destroy(); var t = this.video, n = this.root; cn(i.prototype.__proto__ || Object.getPrototypeOf(i.prototype), "destroy", this).call(this, e), t && t.remove ? t.remove() : n && n.removeChild(t) } }, { key: "addLiveFlag", value: function () { var t = this; if (e.util.addClass(t.root, "xgplayer-is-live"), !e.util.findDom(this.root, "xg-live")) { var i = e.util.createDom("xg-live", "正在直播", {}, "xgplayer-live"); t.controls.appendChild(i) } } }, { key: "_destroy", value: function () { this.context.destroy(), this.flv = null, this.context = null } }, { key: "src", get: function () { return this.currentSrc }, set: function (e) { this.config.url = e, this.paused ? this.start(e) : (this.currentTime = 0, this.pause(), this.play()) } }]), i }(e), vn = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), yn = function () { function t(i) { return le(this, t), pn.isSupported() && i.useWASM ? new pn(i) : Qi.isSupported() ? new Qi(i) : new e(i) } return vn(t, null, [{ key: "install", value: function (t, i) { return e.install(t, i) } }]), t }(); yn.EVENTS = Rt; var _n = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), mn = Rt.REMUX_EVENTS, gn = Rt.DEMUX_EVENTS, En = Rt.LOADER_EVENTS, bn = Rt.MSE_EVENTS, kn = "FLVController", Tn = function () { function e() { he(this, e) } return _n(e, [{ key: "warn", value: function () { } }]), e }(), An = function () { function t(e, i) { he(this, t), this.TAG = kn, this._player = e, this.mse = i, this.state = { initSegmentArrived: !1, range: { start: 0, end: "" }, rangeSupport: !0 } } return _n(t, [{ key: "init", value: function () { this._context.registry("FETCH_LOADER", Dt), this._context.registry("LOADER_BUFFER", $e), this._context.registry("FLV_DEMUXER", Pi), this._context.registry("TRACKS", Qe), this._context.registry("MP4_REMUXER", Ni)(this._player.currentTime), this._context.registry("PRE_SOURCE_BUFFER", Ze), this._context.registry("COMPATIBILITY", vi), this._context.registry("LOGGER", Tn), this.mse || (this.mse = new St({ container: this._player.video }, this._context), this.mse.init()), this.initListeners() } }, { key: "initListeners", value: function () { this.on(En.LOADER_DATALOADED, this._handleLoaderDataLoaded.bind(this)), this.on(En.LOADER_ERROR, this._handleNetworkError.bind(this)), this.on(gn.MEDIA_INFO, this._handleMediaInfo.bind(this)), this.on(gn.METADATA_PARSED, this._handleMetadataParsed.bind(this)), this.on(gn.DEMUX_COMPLETE, this._handleDemuxComplete.bind(this)), this.on(gn.DEMUX_ERROR, this._handleDemuxError.bind(this)), this.on(gn.SEI_PARSED, this._handleSEIParsed.bind(this)), this.on(bn.MSE_ERROR, this._handleMseError.bind(this)), this.on(mn.INIT_SEGMENT, this._handleAppendInitSegment.bind(this)), this.on(mn.MEDIA_SEGMENT, this._handleMediaSegment.bind(this)) } }, { key: "_handleMediaInfo", value: function () { var e = this; this._context.onMetaData || this.emit(gn.DEMUX_ERROR, new Error("failed to get mediainfo")); var t = this._context.getInstance("LOADER_BUFFER"), i = this._context.getInstance("FETCH_LOADER"); this.isSeekable && (i.cancel(), this.state.range = { start: 0, end: t.historyLen - 1 }, setTimeout(function () { e.loadNext(0) })) } }, { key: "_handleLoaderDataLoaded", value: function () { this.emitTo("FLV_DEMUXER", gn.DEMUX_START) } }, { key: "_handleMetadataParsed", value: function (e) { this.emit(mn.REMUX_METADATA, e) } }, { key: "_handleSEIParsed", value: function (e) { this._player.emit("SEI_PARSED", e) } }, { key: "_handleDemuxComplete", value: function () { this.emit(mn.REMUX_MEDIA, "flv") } }, { key: "_handleAppendInitSegment", value: function () { this.state.initSegmentArrived = !0, this.mse.addSourceBuffers() } }, { key: "_handleMediaSegment", value: function () { this.mse.addSourceBuffers(), this.mse.doAppend() } }, { key: "_handleNetworkError", value: function (t, i) { this._player.emit("error", new e.Errors("network", this._player.config.url)), this._onError(En.LOADER_ERROR, t, i, !0) } }, { key: "_handleDemuxError", value: function (t, i, n) { void 0 === n && (n = !1), this._player.emit("error", new e.Errors("parse", this._player.config.url)), this._onError(En.LOADER_ERROR, t, i, n) } }, { key: "_handleMseError", value: function (e, t, i) { void 0 === i && (i = !1), this._onError(bn.MSE_ERROR, e, t, i) } }, { key: "_onError", value: function (e, t, i, n) { var r = { errorType: e, errorDetails: "[" + t + "]: " + (i ? i.message : ""), errorFatal: n || !1 }; this._player.emit("FLV_ERROR", r) } }, { key: "seek", value: function (e) { if (!this._context.onMetaData) return void this.loadMeta(); if (this.isSeekable) { this._context.getInstance("LOADER_BUFFER").clear(); var t = this._player.config.preloadTime, i = void 0 === t ? 15 : t, n = this.getSeekRange(e, i); this.state.range = n, this.compat && this.compat.reset(), this.loader.destroy(), this._context.registry("FETCH_LOADER", Dt)(), this.loadData() } } }, { key: "loadNext", value: function (e) { this._context.onMetaData && (this.loader.loading || this.getNextRange(e) && this.loadData()) } }, { key: "loadData", value: function () { var e = this.state.range, t = e.start, i = e.end; this.emit(En.LADER_START, this._player.config.url, { headers: { method: "get", Range: "bytes=" + t + "-" + i } }) } }, { key: "loadMeta", value: function () { var e = this; this.loader.load(this._player.config.url, { headers: { Range: "bytes=0-" } }).catch(function () { e.state.rangeSupport = !1, e.loadFallback() }) } }, { key: "loadFallback", value: function () { var t = this; this.loader.load(this._player.config.url).catch(function () { t._player.emit("error", new e.Errors("network", t._player.config.url)) }) } }, { key: "getSeekRange", value: function (e, i) { var n = this._context.onMetaData.keyframes, r = this._context.mediaInfo.duration, a = e, s = e + i, o = t.findFilePosition(a, n); return s >= r || a >= r ? { start: o, end: "" } : { start: o, end: t.findFilePosition(s, n) } } }, { key: "getNextRange", value: function (e) { if ("" !== this.state.range.end) { var t = this.getSeekRange(e, this.config.preloadTime || 15).end; if (!(t <= this.state.range.end && "" !== t)) return this.state.range = { start: this.state.range.end + 1, end: t }, !0 } } }, { key: "destroy", value: function () { this._player = null, this.mse = null, this.state = { initSegmentArrived: !1, range: { start: 0, end: "" }, rangeSupport: !0 } } }, { key: "isSeekable", get: function () { return !(!this.state.rangeSupport || !this._context) && (null !== this._context.onMetaData.keyframes && void 0 !== this._context.onMetaData.keyframes) } }, { key: "config", get: function () { return this._player.config } }, { key: "loader", get: function () { return this._context.getInstance("FETCH_LOADER") } }, { key: "compat", get: function () { return this._context.getInstance("COMPATIBILITY") } }, { key: "loadBuffer", get: function () { return this._context.getInstance("LOADER_BUFFER") } }], [{ key: "findFilePosition", value: function (e, t) { for (var i = 0, n = t.times.length; i < n; i++) { var r = t.times[i], a = i + 1 < n ? t.times[i + 1] : Number.MAX_SAFE_INTEGER; if (r <= e && e <= a) return t.filepositions[i] } return "" } }]), t }(), Sn = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (e) { return typeof e } : function (e) { return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e }, wn = function e(t, i, n) { null === t && (t = Function.prototype); var r = Object.getOwnPropertyDescriptor(t, i); if (void 0 === r) { var a = Object.getPrototypeOf(t); return null === a ? void 0 : e(a, i, n) } if ("value" in r) return r.value; var s = r.get; if (void 0 !== s) return s.call(n) }, Rn = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(), Dn = Tt.debounce, On = Rt.FlvAllowedEvents, Ln = function (e, t) { if (!e.config.isLive && e.duration - e.currentTime < 2) { var i = e.getBufferedRange(); e.currentTime - i[1] < .1 && (e.emit("ended"), t.mse.endOfStream()) } }, Bn = function (t) { function i(e) { ce(this, i); var t = fe(this, (i.__proto__ || Object.getPrototypeOf(i)).call(this, e)); return t.initEvents(), t } return de(i, t), Rn(i, null, [{ key: "isSupported", value: function () { return window.MediaSource && window.MediaSource.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"') } }, { key: "install", value: function (t, i) { return e.install(t, i) } }]), Rn(i, [{ key: "start", value: function () { if (!this.started) { this.context || (this.context = new At(On)); var e = this.initFlv(); e.loadMeta(), wn(i.prototype.__proto__ || Object.getPrototypeOf(i.prototype), "start", this).call(this, e.mse.url), this.started = !0 } } }, { key: "initFlv", value: function () { var e = this.context.registry("FLV_CONTROLLER", An)(this); return this.context.init(), this.flv = e, this.mse = e.mse, e } }, { key: "initFlvBackupEvents", value: function (e, t) { var i = this; e.once(Rt.REMUX_EVENTS.INIT_SEGMENT, function () { var n = 3; e.on(Rt.REMUX_EVENTS.MEDIA_SEGMENT, function () { 0 === (n -= 1) && (i.flv = e, i.mse.resetContext(t), i.context.destroy(), i.context = t) }) }), e.once(Rt.LOADER_EVENTS.LOADER_ERROR, function () { t.destroy() }) } }, { key: "initEvents", value: function () { this.on("timeupdate", this.handleTimeUpdate.bind(this)), this.on("seeking", this.handleSeek.bind(this)), this.once("destroy", this._destroy.bind(this)) } }, { key: "handleTimeUpdate", value: function () { this.loadData(), Ln(this, this.flv) } }, { key: "handleSeek", value: function () { var e = this.currentTime, t = this.getBufferedRange(); (e > t[1] || e < t[0]) && Dn(this.flv.seek(this.currentTime), 200) } }, { key: "_destroy", value: function () { this.context && this.context.destroy(), this.context = null, this.flv = null } }, { key: "loadData", value: function () { var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : this.currentTime, t = this.getBufferedRange(); t[1] - e < (this.config.preloadTime || 15) - 5 && this.flv.loadNext(t[1] + 1) } }, { key: "switchURL", value: function (e) { this.config.url = e; var t = new At(On), i = t.registry("FLV_CONTROLLER", An)(this, this.mse); this.newContext = t, this.newFlv = i, t.init(), t.getInstance("MP4_REMUXER")._dtsBase = 0, this.initFlvBackupEvents(i, t), i.loadMeta() } }, { key: "remuxer", get: function () { return this.context.getInstance("MP4_REMUXER") } }, { key: "src", get: function () { return this.currentSrc }, set: function (e) { return this.switchURL(e) } }]), i }(e), xn = function () { function e(e, t) { for (var i = 0; i < t.length; i++) { var n = t[i]; n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n) } } return function (t, i, n) { return i && e(t.prototype, i), n && e(t, n), t } }(); return function () { function t(e) { return pe(this, t), e.isLive ? new yn(e) : new Bn(e) } return xn(t, null, [{ key: "isSupported", value: function () { return window.MediaSource && window.MediaSource.isTypeSupported('video/mp4; codecs="avc1.42E01E,mp4a.40.2"') } }, { key: "install", value: function (t, i) { return e.install(t, i) } }]), t }() });
//# sourceMappingURL=index.min.js.map